import{D as m,F as d,a$ as u,b7 as y,a5 as h,bp as b}from"./index-d502c71f.js";import c from"./FeatureLayerView2D-785a3fdf.js";import"./definitions-33ef697c.js";import"./LayerView2D-c393ba33.js";import"./Container-5983facd.js";import"./enums-b14466b3.js";import"./Texture-b4701b0e.js";import"./AttributeStoreView-586cd80e.js";import"./TiledDisplayObject-e0392100.js";import"./color-b1633796.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-e70980f0.js";import"./VertexArrayObject-86797d09.js";import"./vec4f32-0d1b2306.js";import"./ProgramTemplate-3c99af6f.js";import"./GeometryUtils-695caa76.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-87b94ce0.js";import"./featureConversionUtils-45eb111c.js";import"./OptimizedFeature-4701473b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./visualVariablesUtils-26e0ab66.js";import"./cimAnalyzer-0eb34ebb.js";import"./fontUtils-fc334891.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-a0f4d86e.js";import"./quantizationUtils-8f5033a1.js";import"./floatRGBA-25e9419d.js";import"./ExpandedCIM-a1874f92.js";import"./util-c404bd4a.js";import"./BitmapTileContainer-0f7b4617.js";import"./Bitmap-f32bd685.js";import"./TileContainer-f0a7dc3f.js";import"./CircularArray-ef508845.js";import"./BufferPool-fd96262d.js";import"./FeatureContainer-b47be9c1.js";import"./popupUtils-77878d7e.js";import"./LayerView-abb65385.js";import"./RefreshableLayerView-20fa2e28.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let p=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var n;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((n=this.tileRenderer)==null?void 0:n.updating),a=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),a}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};p=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],p);const me=p;export{me as default};
