import{V as i,s as l}from"./index-a8f4225e.js";import{U as m,v as p,q as y,k as d}from"./quantizationUtils-443ae158.js";function h(n,r,e,o,t){if(n==null)return null;const s=n.referencesGeometry()&&t?f(r,o,t):r,a=n.repurposeFeature(s);try{return n.evaluate({...e,$feature:a},n.services)}catch(c){return i.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",c),null}}const u=new Map;function f(n,r,e){const{transform:o,hasZ:t,hasM:s}=e;u.has(r)||u.set(r,g(r));const a=u.get(r)(n.geometry,o,t,s);return{...n,geometry:a}}function g(n){const r={};switch(n){case"esriGeometryPoint":return(e,o,t,s)=>d(o,r,e,t,s);case"esriGeometryPolygon":return(e,o,t,s)=>y(o,r,e,t,s);case"esriGeometryPolyline":return(e,o,t,s)=>p(o,r,e,t,s);case"esriGeometryMultipoint":return(e,o,t,s)=>m(o,r,e,t,s);default:return i.getLogger("esri.views.2d.support.arcadeOnDemand").error(new l("mapview-arcade",`Unable to handle geometryType: ${n}`)),e=>e}}export{h as s};
