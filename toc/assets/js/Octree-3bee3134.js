import{cV as at,hc as Z,hd as ft,f$ as C,he as $,hf as p,hg as Tt,fy as Ot,hh as mt,fz as Rt,hi as pt,hj as Et,fo as At,hk as I,hl as bt,hm as g,bj as A,a9 as Nt,bp as D,hn as q,ho as tt,hp as k,hq as et,g1 as z,hr as nt,hs as ot,fD as st,g0 as P,ht as Ft,bG as T}from"./index-f2dd40fe.js";function X(o){return o?{ray:Z(o.ray),c0:o.c0,c1:o.c1}:{ray:Z(),c0:0,c1:Number.MAX_VALUE}}function Gt(o,t=X()){return ft(o,t.ray),t.c0=0,t.c1=Number.MAX_VALUE,t}function Dt(o,t){return dt(o,o.c0,t)}function yt(o,t){return dt(o,o.c1,t)}function dt(o,t,e){return C(e,o.ray.origin,$(e,o.ray.direction,t))}new at(()=>X());function vt(o){return o?[p(o[0]),p(o[1]),p(o[2]),p(o[3]),p(o[4]),p(o[5])]:[p(),p(),p(),p(),p(),p()]}function gt(){return[A(),A(),A(),A(),A(),A(),A(),A()]}function wt(o,t){for(let e=0;e<Q;e++)Tt(o[e],t[e])}function Ct(o,t,e,n=xt){const s=Ot(mt.get(),t,o);Rt(s,s);for(let i=0;i<St;++i){const r=pt(Et.get(),Bt[i],s);At(n[i],r[0]/r[3],r[1]/r[3],r[2]/r[3])}Mt(e,n)}function Mt(o,t){I(t[h.FAR_BOTTOM_LEFT],t[h.NEAR_BOTTOM_LEFT],t[h.NEAR_TOP_LEFT],o[M.LEFT]),I(t[h.NEAR_BOTTOM_RIGHT],t[h.FAR_BOTTOM_RIGHT],t[h.FAR_TOP_RIGHT],o[M.RIGHT]),I(t[h.FAR_BOTTOM_LEFT],t[h.FAR_BOTTOM_RIGHT],t[h.NEAR_BOTTOM_RIGHT],o[M.BOTTOM]),I(t[h.NEAR_TOP_LEFT],t[h.NEAR_TOP_RIGHT],t[h.FAR_TOP_RIGHT],o[M.TOP]),I(t[h.NEAR_BOTTOM_LEFT],t[h.NEAR_BOTTOM_RIGHT],t[h.NEAR_TOP_RIGHT],o[M.NEAR]),I(t[h.FAR_BOTTOM_RIGHT],t[h.FAR_BOTTOM_LEFT],t[h.FAR_TOP_LEFT],o[M.FAR])}function y(o,t){for(let e=0;e<Q;e++){const n=o[e];if(n[0]*t[0]+n[1]*t[1]+n[2]*t[2]+n[3]>=t[3])return!1}return!0}function $t(o,t){for(let e=0;e<Q;e++){const n=o[e];if(!bt(n,t))return!1}return!0}var M,h;(function(o){o[o.LEFT=0]="LEFT",o[o.RIGHT=1]="RIGHT",o[o.BOTTOM=2]="BOTTOM",o[o.TOP=3]="TOP",o[o.NEAR=4]="NEAR",o[o.FAR=5]="FAR"})(M||(M={})),function(o){o[o.NEAR_BOTTOM_LEFT=0]="NEAR_BOTTOM_LEFT",o[o.NEAR_BOTTOM_RIGHT=1]="NEAR_BOTTOM_RIGHT",o[o.NEAR_TOP_RIGHT=2]="NEAR_TOP_RIGHT",o[o.NEAR_TOP_LEFT=3]="NEAR_TOP_LEFT",o[o.FAR_BOTTOM_LEFT=4]="FAR_BOTTOM_LEFT",o[o.FAR_BOTTOM_RIGHT=5]="FAR_BOTTOM_RIGHT",o[o.FAR_TOP_RIGHT=6]="FAR_TOP_RIGHT",o[o.FAR_TOP_LEFT=7]="FAR_TOP_LEFT"}(h||(h={}));h.FAR_BOTTOM_RIGHT,h.NEAR_BOTTOM_RIGHT,h.NEAR_BOTTOM_LEFT,h.FAR_BOTTOM_LEFT,h.NEAR_BOTTOM_LEFT,h.NEAR_BOTTOM_RIGHT,h.NEAR_TOP_RIGHT,h.NEAR_TOP_LEFT,h.FAR_BOTTOM_RIGHT,h.FAR_BOTTOM_LEFT,h.FAR_TOP_LEFT,h.FAR_TOP_RIGHT,h.NEAR_BOTTOM_RIGHT,h.FAR_BOTTOM_RIGHT,h.FAR_TOP_RIGHT,h.NEAR_TOP_RIGHT,h.FAR_BOTTOM_LEFT,h.NEAR_BOTTOM_LEFT,h.NEAR_TOP_LEFT,h.FAR_TOP_LEFT,h.FAR_TOP_LEFT,h.NEAR_TOP_LEFT,h.NEAR_TOP_RIGHT,h.FAR_TOP_RIGHT;const Q=6,St=8,Bt=[g(-1,-1,-1,1),g(1,-1,-1,1),g(1,1,-1,1),g(-1,1,-1,1),g(-1,-1,1,1),g(1,-1,1,1),g(1,1,1,1),g(-1,1,1,1)];new at(X);const xt=gt();class j{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new l,this._objectCount=0,e&&(e.maximumObjectsPerNode!==void 0&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),e.maximumDepth!==void 0&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),l.clearPool(),U[0]=null,B.prune(),x.prune()}add(t,e=t.length){this._objectCount+=e,this._grow(t,e);const n=l.acquire();for(let s=0;s<e;s++){const i=t[s];this._isDegenerate(i)?this._degenerateObjects.add(i):(n.init(this._root),this._add(i,n))}l.release(n)}remove(t,e=null){this._objectCount-=t.length;const n=l.acquire();for(const s of t){const i=e??q(this.objectToBoundingSphere(s),Ht);G(i[3])?(n.init(this._root),this._remove(s,i,n)):this._degenerateObjects.delete(s)}l.release(n),this._shrink()}update(t,e){if(!G(e[3])&&this._isDegenerate(t))return;const n=Lt(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const s=tt(t,e);this._forEachNode(this._root,i=>{if(!this._intersectsNode(s,i))return!1;const r=i.node;return r.terminals.forAll(d=>{this._intersectsObject(s,d)&&n(d)}),r.residents!==null&&r.residents.forAll(d=>{this._intersectsObject(s,d)&&n(d)}),!0})}forEachAlongRayWithVerticalOffset(t,e,n,s){const i=tt(t,e);this._forEachNode(this._root,r=>{if(!this._intersectsNodeWithOffset(i,r,s))return!1;const d=r.node;return d.terminals.forAll(a=>{this._intersectsObjectWithOffset(i,a,s)&&n(a)}),d.residents!==null&&d.residents.forAll(a=>{this._intersectsObjectWithOffset(i,a,s)&&n(a)}),!0})}forEach(t){this._forEachNode(this._root,e=>{const n=e.node;return n.terminals.forAll(t),n.residents!==null&&n.residents.forAll(t),!0}),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n,s=()=>!0,i=1/0){let r=1/0,d=1/0,a=null;const c=K(t,e),f=u=>{if(--i,!s(u))return;const O=this.objectToBoundingSphere(u);if(!y(n,O))return;const b=S(t,e,z(O)),L=b-O[3],_=b+O[3];L<r&&(r=L,d=_,a=u)};return this._forEachNodeDepthOrdered(this._root,u=>{if(i<=0||!y(n,u.bounds)||($(E,c,u.halfSize),C(E,E,u.bounds),S(t,e,E)>d))return!1;const O=u.node;return O.terminals.forAll(b=>f(b)),O.residents!==null&&O.residents.forAll(b=>f(b)),!0},t,e),a}forEachInDepthRange(t,e,n,s,i,r,d){let a=-1/0,c=1/0;const f={setRange:_=>{n===j.DepthOrder.FRONT_TO_BACK?(a=Math.max(a,_.near),c=Math.min(c,_.far)):(a=Math.max(a,-_.far),c=Math.min(c,-_.near))}};f.setRange(s);const u=S(e,n,t),O=K(e,n),b=K(e,-n),L=_=>{if(!d(_))return;const F=this.objectToBoundingSphere(_),H=z(F),Y=S(e,n,H)-u,ct=Y-F[3],_t=Y+F[3];ct>c||_t<a||!y(r,F)||i(_,f)};this._forEachNodeDepthOrdered(this._root,_=>{if(!y(r,_.bounds)||($(E,O,_.halfSize),C(E,E,_.bounds),S(e,n,E)-u>c)||($(E,b,_.halfSize),C(E,E,_.bounds),S(e,n,E)-u<a))return!1;const F=_.node;return F.terminals.forAll(H=>L(H)),F.residents!==null&&F.residents.forAll(H=>L(H)),!0},e,n)}forEachNode(t){this._forEachNode(this._root,e=>t(e.node,e.bounds,e.halfSize,e.depth))}forEachNeighbor(t,e){const n=k(e),s=z(e),i=a=>{const c=this.objectToBoundingSphere(a),f=k(c),u=n+f;return!(et(z(c),s)-u*u<=0)||t(a)};let r=!0;const d=a=>{r&&(r=i(a))};this._forEachNode(this._root,a=>{const c=k(a.bounds),f=n+c;if(et(z(a.bounds),s)-f*f>0)return!1;const u=a.node;return u.terminals.forAll(d),r&&u.residents!==null&&u.residents.forAll(d),r}),r&&this.forEachDegenerateObject(d)}_intersectsNode(t,e){return v(e.bounds,2*-e.halfSize,m),v(e.bounds,2*e.halfSize,R),nt(t.origin,t.direction,m,R)}_intersectsNodeWithOffset(t,e,n){return v(e.bounds,2*-e.halfSize,m),v(e.bounds,2*e.halfSize,R),n.applyToMinMax(m,R),nt(t.origin,t.direction,m,R)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||ot(n,t)}_intersectsObjectWithOffset(t,e,n){const s=this.objectToBoundingSphere(e);return!(s[3]>0)||ot(n.applyToBoundingSphere(s),t)}_forEachNode(t,e){let n=l.acquire().init(t);const s=[n];for(;s.length!==0;){if(n=s.pop(),e(n)&&!n.isLeaf())for(let i=0;i<n.node.children.length;i++)n.node.children[i]&&s.push(l.acquire().init(n).advance(i));l.release(n)}}_forEachNodeDepthOrdered(t,e,n,s=j.DepthOrder.FRONT_TO_BACK){let i=l.acquire().init(t);const r=[i];for(Pt(n,s,ht);r.length!==0;){if(i=r.pop(),e(i)&&!i.isLeaf())for(let d=7;d>=0;--d){const a=ht[d];i.node.children[a]&&r.push(l.acquire().init(i).advance(a))}l.release(i)}}_remove(t,e,n){B.clear();const s=n.advanceTo(e,(i,r)=>{B.push(i.node),B.push(r)})?n.node.terminals:n.node.residents;if(s.removeUnordered(t),s.length===0)for(let i=B.length-2;i>=0;i-=2){const r=B.data[i],d=B.data[i+1];if(!this._purge(r,d))break}}_nodeIsEmpty(t){if(t.terminals.length!==0)return!1;if(t.residents!==null)return t.residents.length===0;for(let e=0;e<t.children.length;e++)if(t.children[e])return!1;return!0}_purge(t,e){return e>=0&&(t.children[e]=null),!!this._nodeIsEmpty(t)&&(t.residents===null&&(t.residents=new D({shrink:!0})),!0)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const s=l.acquire().init(t);this._add(e.at(n),s),l.release(s)}}_grow(t,e){if(e!==0&&(it(t,e,n=>this.objectToBoundingSphere(n),N),G(N[3])&&!this._fitsInsideTree(N)))if(this._nodeIsEmpty(this._root.node))q(N,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const n=this._rootBoundsForRootAsSubNode(N);this._placingRootViolatesMaxDepth(n)?this._rebuildTree(N,n):this._growRootAsSubNode(n),l.release(n)}}_rebuildTree(t,e){st(W,e.bounds),W[3]=e.halfSize,it([t,W],2,s=>s,J);const n=l.acquire().init(this._root);this._root.initFrom(null,J,J[3]),this._root.increaseHalfSize(1.25),this._forEachNode(n,s=>(this.add(s.node.terminals.data,s.node.terminals.length),s.node.residents!==null&&this.add(s.node.residents.data,s.node.residents.length),!0)),l.release(n)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return this._forEachNode(this._root,s=>(n=Math.max(n,s.depth),n+e<=this._maximumDepth)),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let s=-1/0;const i=this._root.bounds,r=this._root.halfSize;for(let a=0;a<3;a++){const c=i[a]-r-(n[a]-e),f=n[a]+e-(i[a]+r),u=Math.max(0,Math.ceil(c/(2*r))),O=Math.max(0,Math.ceil(f/(2*r)))+1,b=2**Math.ceil(Math.log(u+O)*Math.LOG2E);s=Math.max(s,b),w[a].min=u,w[a].max=O}for(let a=0;a<3;a++){let c=w[a].min,f=w[a].max;const u=(s-(c+f))/2;c+=Math.ceil(u),f+=Math.floor(u);const O=i[a]-r-c*r*2;V[a]=O+(f+c)*r}const d=s*r;return V[3]=d*ut,l.acquire().initFrom(null,V,d,0)}_growRootAsSubNode(t){const e=this._root.node;st(N,this._root.bounds),N[3]=this._root.halfSize,this._root.init(t),t.advanceTo(N,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(t===-1)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(this._root.node.terminals.length!==0||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,s=0;for(;s<e.length&&t==null;)n=s++,t=e[n];for(;s<e.length;)if(e[s++])return-1;return n}_isDegenerate(t){return!G(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,s=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:s}}}_nodeToJSON(t){var i,r;const e=t.children.map(d=>d?this._nodeToJSON(d):null),n=(i=t.residents)==null?void 0:i.map(d=>this.objectToBoundingSphere(d)),s=(r=t.terminals)==null?void 0:r.map(d=>this.objectToBoundingSphere(d));return{children:e,residents:n,terminals:s}}static fromJSON(t){const e=new j(n=>n,{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class l{constructor(){this.bounds=P(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n,s=this.depth){return this.node=t??l.createEmptyNode(),e!=null&&q(e,this.bounds),this.halfSize=n,this.depth=s,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*ut}advance(t){let e=this.node.children[t];e||(e=l.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=lt[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e,n=!1){for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const s=this._childIndex(t);e&&e(this,s),this.advance(s)}}isLeaf(){return this.node.residents!=null}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new D({shrink:!0}),residents:new D({shrink:!0})}}static acquire(){return l._pool.acquire()}static release(t){l._pool.release(t)}static clearPool(){l._pool.prune()}}function jt(o,t){o[0]=Math.min(o[0],t[0]-t[3]),o[1]=Math.min(o[1],t[1]-t[3]),o[2]=Math.min(o[2],t[2]-t[3])}function It(o,t){o[0]=Math.max(o[0],t[0]+t[3]),o[1]=Math.max(o[1],t[1]+t[3]),o[2]=Math.max(o[2],t[2]+t[3])}function v(o,t,e){e[0]=o[0]+t,e[1]=o[1]+t,e[2]=o[2]+t}function it(o,t,e,n){if(t===1){const s=e(o[0]);q(s,n)}else{m[0]=1/0,m[1]=1/0,m[2]=1/0,R[0]=-1/0,R[1]=-1/0,R[2]=-1/0;for(let s=0;s<t;s++){const i=e(o[s]);G(i[3])&&(jt(m,i),It(R,i))}Ft(n,m,R,.5),n[3]=Math.max(R[0]-m[0],R[1]-m[1],R[2]-m[2])/2}}function Pt(o,t,e){if(!x.length)for(let n=0;n<8;++n)x.push({index:0,distance:0});for(let n=0;n<8;++n){const s=lt[n];x.data[n].index=n,x.data[n].distance=S(o,t,s)}x.sort((n,s)=>n.distance-s.distance);for(let n=0;n<8;++n)e[n]=x.data[n].index}function K(o,t){let e,n=1/0;for(let s=0;s<8;++s){const i=S(o,t,rt[s]);i<n&&(n=i,e=rt[s])}return e}function S(o,t,e){return t*(o[0]*e[0]+o[1]*e[1]+o[2]*e[2])}function G(o){return!isNaN(o)&&o!==-1/0&&o!==1/0&&o>0}l._pool=new Nt(l),function(o){var t;(t=o.DepthOrder||(o.DepthOrder={}))[t.FRONT_TO_BACK=1]="FRONT_TO_BACK",t[t.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(j||(j={}));const lt=[T(-1,-1,-1),T(1,-1,-1),T(-1,1,-1),T(1,1,-1),T(-1,-1,1),T(1,-1,1),T(-1,1,1),T(1,1,1)],rt=[T(-1,-1,-1),T(-1,-1,1),T(-1,1,-1),T(-1,1,1),T(1,-1,-1),T(1,-1,1),T(1,1,-1),T(1,1,1)],ut=Math.sqrt(3),U=[null];function Lt(o){return U[0]=o,U}const V=P(),E=A(),m=A(),R=A(),B=new D,Ht=P(),N=P(),W=P(),J=P(),w=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],x=new D,ht=[0,0,0,0,0,0,0,0],qt=j;export{vt as I,wt as L,qt as W,X as a,yt as g,M as l,$t as m,Dt as p,Ct as s,Gt as y};
