import{a as m,c as d,l as u,f as y,z as h,A as c}from"./index-f2dd40fe.js";import b from"./FeatureLayerView2D-a0a4b7d9.js";import"./definitions-f8d1e4ff.js";import"./LayerView2D-26440710.js";import"./Container-2e5d0bc8.js";import"./enums-b14466b3.js";import"./Texture-943a7fb8.js";import"./AttributeStoreView-a9f4bff9.js";import"./TiledDisplayObject-ef7a0da4.js";import"./color-b4cead77.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-23c0b940.js";import"./VertexArrayObject-9c88ea9e.js";import"./vec4f32-0d1b2306.js";import"./ProgramTemplate-9bdd467f.js";import"./GeometryUtils-af431257.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-f75ddd8c.js";import"./featureConversionUtils-82ac6d68.js";import"./OptimizedFeature-4701473b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./visualVariablesUtils-d048cd4e.js";import"./cimAnalyzer-d84ab815.js";import"./fontUtils-ee608e5c.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-f1df3ebc.js";import"./quantizationUtils-7684b773.js";import"./floatRGBA-5a572a7e.js";import"./ExpandedCIM-1bd597f1.js";import"./util-72a79e8d.js";import"./BitmapTileContainer-cbc08039.js";import"./Bitmap-1f465261.js";import"./TileContainer-7b9e8d40.js";import"./CircularArray-ef508845.js";import"./BufferPool-a2f874f6.js";import"./FeatureContainer-0eeb30df.js";import"./popupUtils-53047f26.js";import"./LayerView-7f4d37a1.js";import"./RefreshableLayerView-1b252d5d.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let p=class extends b{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var a;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((a=this.tileRenderer)==null?void 0:a.updating),n=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${n}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),n}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new c().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};p=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],p);const me=p;export{me as default};
