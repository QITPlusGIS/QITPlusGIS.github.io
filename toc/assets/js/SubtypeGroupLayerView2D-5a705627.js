import{D as m,F as d,a$ as u,b7 as y,a5 as h,bp as b}from"./index-a505898b.js";import c from"./FeatureLayerView2D-7a9bf807.js";import"./definitions-8f6c0024.js";import"./LayerView2D-de2fd686.js";import"./Container-de185a32.js";import"./enums-b14466b3.js";import"./Texture-eb8cd14a.js";import"./AttributeStoreView-a3f655f7.js";import"./TiledDisplayObject-d497910d.js";import"./color-e244539a.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-037578f3.js";import"./VertexArrayObject-08f516fe.js";import"./vec4f32-0d1b2306.js";import"./ProgramTemplate-292cf23e.js";import"./GeometryUtils-f86d11a2.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-6b48af20.js";import"./featureConversionUtils-bafaa402.js";import"./OptimizedFeature-4701473b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./visualVariablesUtils-d4aac532.js";import"./cimAnalyzer-97b03e25.js";import"./fontUtils-d28127a5.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-06ba3d44.js";import"./quantizationUtils-533107d2.js";import"./floatRGBA-de0614b2.js";import"./ExpandedCIM-2df9bc7d.js";import"./util-ac05cbea.js";import"./BitmapTileContainer-eadd1b87.js";import"./Bitmap-fcefeaec.js";import"./TileContainer-0946d38f.js";import"./CircularArray-ef508845.js";import"./BufferPool-85f6109f.js";import"./FeatureContainer-afbe339d.js";import"./popupUtils-ef750880.js";import"./LayerView-6c752c5d.js";import"./RefreshableLayerView-0da84bd0.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let p=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var n;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((n=this.tileRenderer)==null?void 0:n.updating),a=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),a}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};p=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],p);const me=p;export{me as default};
