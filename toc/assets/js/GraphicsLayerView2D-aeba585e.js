import{bb as p,Z as o,W as a,am as m,D as s,E as g,F as l}from"./index-285b86bc.js";import{f as c}from"./LayerView2D-db427149.js";import{i as n}from"./GraphicContainer-b675d25d.js";import{o as d}from"./GraphicsView2D-4fa0e20e.js";import{d as u}from"./LayerView-f78e7c1b.js";import"./Container-ee281ae3.js";import"./definitions-52203e15.js";import"./enums-b14466b3.js";import"./Texture-350cae21.js";import"./color-184730a8.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./BaseGraphicContainer-41c19011.js";import"./FeatureContainer-e15ee69d.js";import"./AttributeStoreView-b6dc859f.js";import"./TiledDisplayObject-cfb083a5.js";import"./WGLContainer-e7f80440.js";import"./VertexArrayObject-41763f8f.js";import"./vec4f32-0d1b2306.js";import"./ProgramTemplate-918fc280.js";import"./GeometryUtils-267ad8e4.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-42d4ceed.js";import"./featureConversionUtils-b7268ef2.js";import"./OptimizedFeature-4701473b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./visualVariablesUtils-5b45d2a7.js";import"./cimAnalyzer-d8bdf82b.js";import"./fontUtils-101326ad.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-f4c14bd8.js";import"./quantizationUtils-4237d443.js";import"./floatRGBA-f99ac696.js";import"./ExpandedCIM-d427558f.js";import"./util-2806ed1b.js";import"./TileContainer-b157d81c.js";import"./normalizeUtilsSync-9797c008.js";import"./projectionSupport-352ff3ab.js";import"./json-48e3ea08.js";import"./Matcher-962c5a99.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-cef3e439.js";import"./ComputedAttributeStorage-ed525f55.js";import"./arcadeTimeUtils-73807f4e.js";import"./centroid-8e8cfa47.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(u){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new d({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new n(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(m);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([g()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const di=e;export{di as default};
