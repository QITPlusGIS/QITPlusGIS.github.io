import{Z as u,W as f,am as w,a$ as o,b7 as p,b4 as y,D as _,F as V}from"./index-a8f4225e.js";import{h as v}from"./Container-04e2bf1c.js";import{r as C}from"./GroupContainer-9c50d392.js";import{f as b}from"./LayerView2D-7c0b6cbf.js";import{i as c}from"./GraphicContainer-be01b5fe.js";import{o as m}from"./GraphicsView2D-5b3de989.js";import{d as H}from"./LayerView-da8b1e68.js";import"./definitions-25fcdc57.js";import"./enums-b14466b3.js";import"./Texture-b4fe8989.js";import"./WGLContainer-dfaf17a0.js";import"./VertexArrayObject-54df3f23.js";import"./VertexElementDescriptor-2925c6af.js";import"./vec4f32-0d1b2306.js";import"./color-b1176c64.js";import"./enums-f1a6a48a.js";import"./number-e491b09e.js";import"./ProgramTemplate-b60196c0.js";import"./GeometryUtils-0383bb65.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-887286f5.js";import"./featureConversionUtils-92a6d504.js";import"./OptimizedFeature-4701473b.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./OptimizedGeometry-196224d4.js";import"./BaseGraphicContainer-cacb0202.js";import"./FeatureContainer-41dcffef.js";import"./AttributeStoreView-d8d81d32.js";import"./TiledDisplayObject-af800be0.js";import"./visualVariablesUtils-9187d9fd.js";import"./cimAnalyzer-0b8074fa.js";import"./fontUtils-7c05d086.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-7fdc4ff4.js";import"./quantizationUtils-443ae158.js";import"./floatRGBA-c29af8d7.js";import"./ExpandedCIM-e852211b.js";import"./util-a70c2d8c.js";import"./TileContainer-82da2bb0.js";import"./normalizeUtilsSync-74f6da36.js";import"./projectionSupport-a38e51eb.js";import"./json-48e3ea08.js";import"./Matcher-db019a2e.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-b556b15f.js";import"./ComputedAttributeStorage-2722f860.js";import"./arcadeTimeUtils-774613dd.js";import"./centroid-8e8cfa47.js";const g="sublayers",n="layerView",T=Object.freeze({remove(){},pause(){},resume(){}});let l=class extends b(H){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new C}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(e=>!!e.popupTemplate)).flat()}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),e=>{const s=e.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const a=this._graphicsViewsFeatureCollectionMap.get(e);for(const r of s)!r.popupTemplate&&a.popupTemplate&&(r.popupTemplate=a.popupTemplate),r.sourceLayer=r.layer=this.layer}return s}).flat().map(e=>({type:"graphic",graphic:e,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):f.isCollection(i)&&(t=i.map(s=>s&&s.uid).toArray());const e=t==null?void 0:t.filter(w);return e!=null&&e.length?(this._addHighlight(e),{remove:()=>{this._removeHighlight(e)}}):T}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),e=this.layer.featureCollections;if(e!=null&&e.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of e){const a=new c(this.view.featuresTilingScheme),r=new m({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:t,container:a});this._graphicsViewsFeatureCollectionMap.set(r,s),this.container.addChild(r.container),this.addHandles([o(()=>s.visible,h=>r.container.visible=h,p),o(()=>r.updating,()=>this.notifyChange("updating"),p)],n)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),g)}detach(){this._destroyGraphicsViews(),this.removeHandles(g)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(n);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,e=()=>this.requestUpdate();for(const s of this.layer.sublayers){const a=new v,r=new c(this.view.featuresTilingScheme);r.fadeTransitionEnabled=!0;const h=new m({view:t,graphics:s.graphics,requestUpdateCallback:e,container:r});this.addHandles([s.on("graphic-update",h.graphicUpdateHandler),o(()=>s.visible,d=>h.container.visible=d,p),o(()=>h.updating,()=>this.notifyChange("updating"),p)],n),a.addChild(h.container),this.container.addChild(a),i.push(h)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const Hi=l;export{Hi as default};
