import{a as e,y as o,c as h,b as g,s as l,f as d}from"./uuid-fb53ae2e.js";import{i as u}from"./GraphicsCollection-2966693c.js";import{a as c}from"./BitmapContainer-f711c539.js";import{m as y,u as f}from"./LayerView-8590f61c.js";import{r as x}from"./GraphicsView2D-cf1235ce.js";import{a as w}from"./HighlightGraphicContainer-5db5c709.js";import{v as _}from"./ExportStrategy-ceec4f3c.js";import{j as v}from"./commonProperties-dc1396d3.js";import{m as H}from"./ExportImageParameters-cc2e5e57.js";import{a as I}from"./RefreshableLayerView-f354dee3.js";import{G as V,r as P}from"./drapedUtils-a4b2d4ef.js";import"./index-e42a63f9.js";import"./WGLContainer-a031049d.js";import"./definitions-d96ec118.js";import"./FramebufferObject-f8937356.js";import"./Texture-909bfb08.js";import"./capabilities-6261cefc.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-12d63168.js";import"./commonjsHelpers-2f3e7994.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-a4b304a5.js";import"./enums-f1a6a48a.js";import"./GeometryUtils-c1de866e.js";import"./heatmapUtils-c2569515.js";import"./vec4f64-3c9d0901.js";import"./mat3f32-6c416b1c.js";import"./StyleDefinition-29c49b98.js";import"./vec2f32-eaf29605.js";import"./config-1337d16e.js";import"./Container-15ae821f.js";import"./parser-450a99c3.js";import"./mat4f32-60a2394b.js";import"./mat4-f091cc2b.js";import"./earcut-b84353bc.js";import"./vec2-aed931ac.js";import"./vec2f64-95bf678d.js";import"./featureConversionUtils-5ad02385.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-bba7f8bb.js";import"./map-7e5b196a.js";import"./Basemap-fc4d26ee.js";import"./loadAll-76369e9a.js";import"./PortalItem-01395053.js";import"./writeUtils-3673b1a7.js";import"./layerUtils-a8920453.js";import"./compilerUtils-811a6f43.js";import"./CollectionFlattener-5cd5b172.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-0a6b5a56.js";import"./TablesMixin-2871072c.js";import"./arcgisLayerUrl-fc2d909c.js";import"./Cyclical-8c26e7c7.js";import"./workers-3c8ba252.js";import"./TileInfo-238dd4b6.js";import"./jsxFactory-8f2e778f.js";import"./UpdatingHandles-9a53fef9.js";import"./signal-a61cc993.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-b9bfc1f5.js";import"./TileStore-6570f2cc.js";import"./quickselect-149a6b43.js";import"./QuantizationParameters-a323cbe3.js";import"./TileInfoView-be4d795d.js";import"./normalizeUtils-a2b8b8b6.js";import"./normalizeUtilsCommon-05ad6f6d.js";import"./mat3-1b291d2f.js";import"./GoTo-2cdac7e7.js";import"./ExpandedCIM-870ec490.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-e6903ea9.js";import"./GeometryUtils-984e8446.js";import"./utils-d023eda3.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-7998a127.js";import"./floatRGBA-04143c6a.js";import"./normalizeUtilsSync-20755c4d.js";import"./projectionSupport-29174b46.js";import"./json-48e3ea08.js";import"./LabelClass-03af2031.js";import"./labelUtils-f4e57b25.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-6741d81c.js";import"./AttributeStoreView-43278226.js";import"./TiledDisplayObject-097260a9.js";import"./diffUtils-7a67a389.js";import"./labelingInfo-144cafce.js";import"./clusterUtils-80867c68.js";import"./MD5-715f37cd.js";import"./SizeVariable-d8011d21.js";import"./colorRamps-18dfa72a.js";import"./LegendOptions-21ba0c6d.js";import"./lengthUtils-5d9bdf3f.js";import"./util-0cf8b7dd.js";import"./Matcher-5cde60f7.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-470e4fcd.js";import"./LRUCache-9b8f5520.js";import"./ComputedAttributeStorage-1c26e0db.js";import"./FieldsIndex-406a2400.js";import"./TimeOnly-f07e8b54.js";import"./BaseGraphicContainer-d8dd2bed.js";import"./FeatureContainer-7b9710d6.js";import"./TileContainer-a854d921.js";import"./vec3f32-2da9db36.js";import"./Bitmap-f012754b.js";import"./ElevationInfo-c9711b5d.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-9959f72e.js";import"./popupUtils-73dae124.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return e([o()],i.prototype,"exportImageParameters",void 0),e([o({readOnly:!0})],i.prototype,"floors",null),e([o({readOnly:!0})],i.prototype,"exportImageVersion",null),e([o()],i.prototype,"layer",void 0),e([o()],i.prototype,"suspended",void 0),e([o(v)],i.prototype,"timeExtent",void 0),i=e([h("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new u,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{g(r)||l.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,p=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,s)=>P(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(d(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,p){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,r,p){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};e([o()],m.prototype,"strategy",void 0),e([o()],m.prototype,"updating",void 0),m=e([h("esri.views.2d.layers.MapImageLayerView2D")],m);const Si=m;export{Si as default};
