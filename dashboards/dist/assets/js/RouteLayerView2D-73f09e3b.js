import{V as m,P as u,h,e as c,f as g,a as n,y as d,c as _}from"./uuid-fb53ae2e.js";import{l as w}from"./CollectionFlattener-5cd5b172.js";import{m as y,c as f,C as k,T as M,j as V,S as v,O as G}from"./Stop-42c7cfd1.js";import{m as I,u as F}from"./LayerView-8590f61c.js";import{i as H}from"./GraphicContainer-6ae2ea3e.js";import{r as C}from"./GraphicsView2D-cf1235ce.js";import"./index-e42a63f9.js";import"./scaleUtils-bba7f8bb.js";import"./Container-15ae821f.js";import"./mat3f32-6c416b1c.js";import"./parser-450a99c3.js";import"./mat4f32-60a2394b.js";import"./mat4-f091cc2b.js";import"./definitions-d96ec118.js";import"./enums-bdecffa2.js";import"./Texture-909bfb08.js";import"./capabilities-6261cefc.js";import"./map-7e5b196a.js";import"./Basemap-fc4d26ee.js";import"./loadAll-76369e9a.js";import"./PortalItem-01395053.js";import"./writeUtils-3673b1a7.js";import"./layerUtils-a8920453.js";import"./compilerUtils-811a6f43.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-0a6b5a56.js";import"./TablesMixin-2871072c.js";import"./arcgisLayerUrl-fc2d909c.js";import"./Cyclical-8c26e7c7.js";import"./workers-3c8ba252.js";import"./TileInfo-238dd4b6.js";import"./jsxFactory-8f2e778f.js";import"./UpdatingHandles-9a53fef9.js";import"./signal-a61cc993.js";import"./GraphicsCollection-2966693c.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-b9bfc1f5.js";import"./vec2-aed931ac.js";import"./TileStore-6570f2cc.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./QuantizationParameters-a323cbe3.js";import"./TileInfoView-be4d795d.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-a2b8b8b6.js";import"./normalizeUtilsCommon-05ad6f6d.js";import"./mat3-1b291d2f.js";import"./vec2f32-eaf29605.js";import"./GoTo-2cdac7e7.js";import"./color-a4b304a5.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-d8dd2bed.js";import"./FeatureContainer-7b9710d6.js";import"./AttributeStoreView-43278226.js";import"./TiledDisplayObject-097260a9.js";import"./diffUtils-7a67a389.js";import"./labelingInfo-144cafce.js";import"./LabelClass-03af2031.js";import"./labelUtils-f4e57b25.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-6741d81c.js";import"./WGLContainer-a031049d.js";import"./FramebufferObject-f8937356.js";import"./ProgramTemplate-12d63168.js";import"./GeometryUtils-c1de866e.js";import"./heatmapUtils-c2569515.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-b84353bc.js";import"./featureConversionUtils-5ad02385.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-e6903ea9.js";import"./ExpandedCIM-870ec490.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-d023eda3.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-7998a127.js";import"./floatRGBA-04143c6a.js";import"./clusterUtils-80867c68.js";import"./MD5-715f37cd.js";import"./SizeVariable-d8011d21.js";import"./colorRamps-18dfa72a.js";import"./LegendOptions-21ba0c6d.js";import"./lengthUtils-5d9bdf3f.js";import"./util-0cf8b7dd.js";import"./TileContainer-a854d921.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-20755c4d.js";import"./projectionSupport-29174b46.js";import"./json-48e3ea08.js";import"./Matcher-5cde60f7.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-470e4fcd.js";import"./LRUCache-9b8f5520.js";import"./ComputedAttributeStorage-1c26e0db.js";import"./FieldsIndex-406a2400.js";import"./TimeOnly-f07e8b54.js";const U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof M||t instanceof V||t instanceof v||t instanceof G}function $(t){return m.isCollection(t)&&t.length&&l(t.at(0))}function b(t){return Array.isArray(t)&&t.length>0&&l(t[0])}let p=class extends I(F){constructor(){super(...arguments),this._graphics=new m,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new w({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new m([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:b(t)?t.map(e=>this._getNetworkFeatureUid(e)):$(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(h);return r.length?(this._addHighlight(r),c(()=>this._removeHighlight(r))):c()}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(h).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return r.symbol==null?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(h));for(const i of t.added)this.addHandles([g(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),g(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};n([d()],p.prototype,"_graphics",void 0),n([d()],p.prototype,"_routeItems",null),p=n([_("esri.views.2d.layers.RouteLayerView2D")],p);const Fi=p;export{Fi as default};
