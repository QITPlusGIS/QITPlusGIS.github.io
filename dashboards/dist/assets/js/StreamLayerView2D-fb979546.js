import{a as i,y as n,c as y,f as d,o as u,dh as h,e as _}from"./uuid-11f8a774.js";import{d as f}from"./FeatureSet-59d81965.js";import S from"./FeatureLayerView2D-efd92e85.js";import{e as v}from"./util-a938c846.js";import{d as g}from"./FeatureEffect-ab0d1707.js";import"./index-9591f551.js";import"./Field-1a3f84f2.js";import"./fieldType-322546e5.js";import"./Container-c1db96c2.js";import"./mat3f32-6c416b1c.js";import"./parser-e8657b5e.js";import"./mat4f32-60a2394b.js";import"./mat4-a716043f.js";import"./definitions-8354b929.js";import"./enums-bdecffa2.js";import"./Texture-2cfb434c.js";import"./capabilities-c523e723.js";import"./layerUtils-c5e7bd79.js";import"./Query-76befbe7.js";import"./arcgisLayerUrl-f89b3daf.js";import"./FullTextSearch-9c3b6738.js";import"./QuantizationParameters-047a8fb0.js";import"./LayerView-5b88715e.js";import"./scaleUtils-3367fb97.js";import"./map-beb54af9.js";import"./Basemap-e835b2ff.js";import"./loadAll-ed668eae.js";import"./PortalItem-6e04dd29.js";import"./writeUtils-08445a52.js";import"./compilerUtils-4589e991.js";import"./CollectionFlattener-3b7ee789.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-1bb3cee3.js";import"./TablesMixin-abbae55c.js";import"./Cyclical-3ead80f1.js";import"./workers-194c6572.js";import"./TileInfo-0752eafb.js";import"./jsxFactory-3225406e.js";import"./UpdatingHandles-453b6cae.js";import"./signal-9889a3e2.js";import"./GraphicsCollection-4a6a6bbf.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-f849f6ea.js";import"./vec2-178908bd.js";import"./TileStore-488f52a1.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./TileInfoView-3c33d57f.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-b40b80d9.js";import"./normalizeUtilsCommon-44f2a7f8.js";import"./mat3-03bcfe6d.js";import"./vec2f32-eaf29605.js";import"./GoTo-576c62ef.js";import"./AttributeStoreView-43a7d5d5.js";import"./TiledDisplayObject-f5b89487.js";import"./diffUtils-0fe85298.js";import"./labelingInfo-efefa770.js";import"./LabelClass-e2fd4294.js";import"./labelUtils-64d01ef0.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-e8038208.js";import"./color-32a3c8c6.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-c9b60762.js";import"./FramebufferObject-276d0d17.js";import"./ProgramTemplate-112d69b6.js";import"./GeometryUtils-9172a54e.js";import"./heatmapUtils-f451477b.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-b84353bc.js";import"./featureConversionUtils-7017a7c2.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-1775d26c.js";import"./ExpandedCIM-591d00a6.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-5680966d.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-03ec5df7.js";import"./floatRGBA-675f6b2f.js";import"./clusterUtils-34ff746f.js";import"./MD5-715f37cd.js";import"./SizeVariable-45541787.js";import"./colorRamps-1b6e24dc.js";import"./LegendOptions-204a2dae.js";import"./lengthUtils-782f0f7c.js";import"./BitmapTileContainer-d68785af.js";import"./Bitmap-7421f3d6.js";import"./TileContainer-5567e24f.js";import"./CircularArray-ef508845.js";import"./BufferPool-f887fdf4.js";import"./FeatureContainer-c08ab301.js";import"./commonProperties-f89d14c0.js";import"./ElevationInfo-799a9463.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-9368255f.js";import"./RefreshableLayerView-3d9d158a.js";import"./jsonUtils-c816488a.js";const O=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:g})],e.prototype,"filter",void 0),e=i([y("esri.layers.mixins.StreamLayerView")],e),e};function c(t,e){if(t==null&&e==null)return null;const r={};return e!=null&&(r.geometry=e.toJSON()),t!=null&&(r.where=t),r}let s=class extends O(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([d(()=>this.layer.customParameters,t=>this._proxy.updateCustomParameters(t)),this.layer.on("send-message-to-socket",t=>this._proxy.sendMessageToSocket(t)),this.layer.on("send-message-to-client",t=>this._proxy.sendMessageToClient(t)),d(()=>this.layer.purgeOptions,()=>this._update()),d(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(m=>this.on(m,e)));const r=["data-received","message-received"].includes(t);r&&(this._enabledEventTypes.add(t),this._proxy.enableEvent(t,!0));const p=super.on(t,e),o=this;return _(()=>{p.remove(),r&&(o._proxy.closed||o.hasEventListener(t)||o._proxy.enableEvent(t,!1))})}queryLatestObservations(t,e){var r,p,o;if(!((r=this.layer.timeInfo)!=null&&r.endField||(p=this.layer.timeInfo)!=null&&p.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(t),e).then(m=>{const a=f.fromJSON(m);return a.features.forEach(l=>{l.layer=this.layer,l.sourceLayer=this.layer}),a})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var t;(t=this._proxy)==null||t.pauseStream()}_doResume(){var t;(t=this._proxy)==null||t.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:t=>{this.set(t.propertyName,t.value)}}}_createTileRendererHash(t){const e=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(t)+e}async _createServiceOptions(){var a;const t=this.layer,{objectIdField:e}=t,r=t.fields.map(l=>l.toJSON()),p=v(t.geometryType),o=((a=t.timeInfo)==null?void 0:a.toJSON())||null,m=t.spatialReference?t.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:p,objectIdField:e,timeInfo:o,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:m,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:t.customParameters}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([y("esri.views.2d.layers.StreamLayerView2D")],s);const Se=s;export{Se as default};
