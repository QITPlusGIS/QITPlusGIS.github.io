import{t as r,v as a,bv as g,w as m,b as l,m as d,q as u,x as c}from"./index-2abb185a.js";import{a as y}from"./BitmapContainer-54ddb1bf.js";import{m as f,u as x}from"./LayerView-1a22d584.js";import{r as w}from"./GraphicsView2D-38d114f2.js";import{a as v}from"./HighlightGraphicContainer-b2481963.js";import{v as _}from"./ExportStrategy-5a94262c.js";import{m as H}from"./ExportImageParameters-1f4bf929.js";import{a as I}from"./RefreshableLayerView-5e9927f2.js";import{G as V,r as b}from"./drapedUtils-edc45fe6.js";import"./WGLContainer-2a83aee5.js";import"./FramebufferObject-b89d34d5.js";import"./Texture-b84b86cf.js";import"./ProgramTemplate-7e25fa16.js";import"./color-27f8ac8a.js";import"./GeometryUtils-acf2f6a6.js";import"./config-1337d16e.js";import"./Container-ad2d9d2b.js";import"./earcut-2dede6a0.js";import"./featureConversionUtils-c2728820.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-16c32eb5.js";import"./ExpandedCIM-61a16965.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-b88425a9.js";import"./utils-cb049025.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-9cf921fd.js";import"./floatRGBA-de28b199.js";import"./normalizeUtilsSync-19ff226f.js";import"./projectionSupport-cad60f3a.js";import"./json-48e3ea08.js";import"./AttributeStoreView-cf89ba19.js";import"./TiledDisplayObject-18816f7e.js";import"./util-276abc42.js";import"./Matcher-1a453d0f.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-6b15656f.js";import"./ComputedAttributeStorage-eec7a19e.js";import"./TimeOnly-a161df0d.js";import"./BaseGraphicContainer-46ff4d74.js";import"./FeatureContainer-610a971d.js";import"./TileContainer-ebaeb5d8.js";import"./vec3f32-2da9db36.js";import"./Bitmap-678b5483.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-b247735f.js";import"./popupUtils-3e90e5e6.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([a()],e.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],e.prototype,"floors",null),r([a({readOnly:!0})],e.prototype,"exportImageVersion",null),r([a()],e.prototype,"layer",void 0),r([a()],e.prototype,"suspended",void 0),r([a(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let o=class extends P(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,s=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>b(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:s,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,s){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}fetchImageBitmap(t,e,i,s){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([a()],o.prototype,"strategy",void 0),r([a()],o.prototype,"updating",void 0),o=r([m("esri.views.2d.layers.MapImageLayerView2D")],o);const _t=o;export{_t as default};
