import{g as u,V as f,h as w,e as l,f as p,P as h,v as y,a as _,c as V}from"./uuid-896b9aab.js";import{m as v,u as C}from"./LayerView-1722f663.js";import{i as c}from"./GraphicContainer-b68fae84.js";import{r as g}from"./GraphicsView2D-07213afd.js";import"./index-36e9aec6.js";import"./scaleUtils-abdae12b.js";import"./Container-9161ffcf.js";import"./mat3f32-6c416b1c.js";import"./parser-14d23883.js";import"./mat4f32-60a2394b.js";import"./mat4-318655b6.js";import"./definitions-061b188f.js";import"./enums-bdecffa2.js";import"./Texture-fd122722.js";import"./capabilities-920791a4.js";import"./map-b4b15665.js";import"./Basemap-b3d6bdf6.js";import"./loadAll-9301c4be.js";import"./PortalItem-6f01e175.js";import"./writeUtils-5fa55c8b.js";import"./layerUtils-71133796.js";import"./compilerUtils-b3a0c560.js";import"./CollectionFlattener-0d53fafe.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-063adf0d.js";import"./TablesMixin-377aa540.js";import"./arcgisLayerUrl-babbe1bf.js";import"./Cyclical-2d9f8684.js";import"./workers-d41a4c7e.js";import"./TileInfo-6cf97248.js";import"./jsxFactory-ce441684.js";import"./UpdatingHandles-bf7dcb98.js";import"./signal-e828fbec.js";import"./GraphicsCollection-27c3cf10.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-5457869f.js";import"./vec2-d237980c.js";import"./TileStore-a2c7e73d.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./QuantizationParameters-8e0f5300.js";import"./TileInfoView-2d740459.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-74c17e0f.js";import"./normalizeUtilsCommon-24d2691e.js";import"./mat3-b213082c.js";import"./vec2f32-eaf29605.js";import"./GoTo-4963ffd1.js";import"./color-3f498e73.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-49907c2e.js";import"./FeatureContainer-3d9f7e09.js";import"./AttributeStoreView-1aeb19c3.js";import"./TiledDisplayObject-bc86ba54.js";import"./diffUtils-a3a9db51.js";import"./labelingInfo-926370a5.js";import"./LabelClass-961ff56d.js";import"./labelUtils-21b484ec.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-3767cca3.js";import"./WGLContainer-510e2b46.js";import"./FramebufferObject-d3749952.js";import"./ProgramTemplate-3fbc9a92.js";import"./GeometryUtils-82ac3342.js";import"./heatmapUtils-27bad519.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-b84353bc.js";import"./featureConversionUtils-35751811.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-95680277.js";import"./ExpandedCIM-87959b09.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-e347ed86.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-9e4adcc7.js";import"./floatRGBA-54854774.js";import"./clusterUtils-d4a9bc58.js";import"./MD5-715f37cd.js";import"./SizeVariable-b5ce232d.js";import"./colorRamps-25747e5c.js";import"./LegendOptions-cec1028c.js";import"./lengthUtils-4ab57232.js";import"./util-cac34b66.js";import"./TileContainer-4a81862a.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-a34a5045.js";import"./projectionSupport-28f855f9.js";import"./json-48e3ea08.js";import"./Matcher-ba0f4e8a.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-4b3ef722.js";import"./LRUCache-6cfe7ff6.js";import"./ComputedAttributeStorage-350112b1.js";import"./FieldsIndex-b9e92cab.js";import"./TimeOnly-b856efbe.js";const d="sublayers",m="layerView";let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(r=>!!r.popupTemplate)).flat()}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(r);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):f.isCollection(i)&&(t=i.map(e=>e&&e.uid).toArray());const r=t==null?void 0:t.filter(w);return r!=null&&r.length?(this._addHighlight(r),l(()=>this._removeHighlight(r))):l()}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(r!=null&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const o=new c(this.view.featuresTilingScheme),s=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const ft=n;export{ft as default};
