import{a as i,y as n,c as y,f as d,o as u,dh as h,e as _}from"./uuid-854440a9.js";import{d as f}from"./FeatureSet-5c3606d3.js";import S from"./FeatureLayerView2D-584ea4ad.js";import{e as v}from"./util-6c29cc30.js";import{d as g}from"./FeatureEffect-32f3776e.js";import"./index-2eca610e.js";import"./Field-3600efd2.js";import"./fieldType-67bcc5fb.js";import"./Container-79c4018f.js";import"./mat3f32-6c416b1c.js";import"./parser-575e2c11.js";import"./mat4f32-60a2394b.js";import"./mat4-8067289c.js";import"./definitions-8d472612.js";import"./enums-bdecffa2.js";import"./Texture-6ea577e5.js";import"./capabilities-b7174812.js";import"./layerUtils-53516847.js";import"./Query-84dc14af.js";import"./arcgisLayerUrl-db50ff50.js";import"./FullTextSearch-a21aa00d.js";import"./QuantizationParameters-0cb320a2.js";import"./LayerView-80524fa4.js";import"./scaleUtils-54b03d24.js";import"./map-3b85b863.js";import"./Basemap-b930c2b7.js";import"./loadAll-c963e2dd.js";import"./PortalItem-eaf53090.js";import"./writeUtils-afcbee82.js";import"./compilerUtils-29e4db8f.js";import"./CollectionFlattener-0ef23bca.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-144ebf6f.js";import"./TablesMixin-cecb199e.js";import"./Cyclical-69deeef6.js";import"./workers-bc069650.js";import"./TileInfo-9470b42d.js";import"./jsxFactory-93a8ddd6.js";import"./UpdatingHandles-0afdfd5b.js";import"./signal-9aac29bc.js";import"./GraphicsCollection-1f93c1d2.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-196efb0a.js";import"./vec2-525139f9.js";import"./TileStore-5e70d226.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./TileInfoView-c4c10e27.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-c97c170d.js";import"./normalizeUtilsCommon-092672b3.js";import"./mat3-5955b3db.js";import"./vec2f32-eaf29605.js";import"./GoTo-548e14ed.js";import"./AttributeStoreView-db69522e.js";import"./TiledDisplayObject-8907be27.js";import"./diffUtils-2fda0782.js";import"./labelingInfo-f046f80c.js";import"./LabelClass-360f8a0a.js";import"./labelUtils-38642a07.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-1956249c.js";import"./color-e7463257.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-c3fd9b8d.js";import"./FramebufferObject-aafd1353.js";import"./ProgramTemplate-34b1be08.js";import"./GeometryUtils-78cf27b3.js";import"./heatmapUtils-2658140c.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-b84353bc.js";import"./featureConversionUtils-fdf2c775.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-927e7922.js";import"./ExpandedCIM-ed43baeb.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-a7ae7610.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-8fbc92ac.js";import"./floatRGBA-f2d0b76d.js";import"./clusterUtils-3da19a70.js";import"./MD5-715f37cd.js";import"./SizeVariable-bf59d78c.js";import"./colorRamps-2b21b939.js";import"./LegendOptions-82a1d9d3.js";import"./lengthUtils-b6ebb268.js";import"./BitmapTileContainer-540e42cd.js";import"./Bitmap-42146cc6.js";import"./TileContainer-3c52930c.js";import"./CircularArray-ef508845.js";import"./BufferPool-b06c6383.js";import"./FeatureContainer-2a82270f.js";import"./commonProperties-c4c17d77.js";import"./ElevationInfo-cefb6d5f.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-ce21ae10.js";import"./RefreshableLayerView-81a56f3c.js";import"./jsonUtils-d5cf6074.js";const O=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:g})],e.prototype,"filter",void 0),e=i([y("esri.layers.mixins.StreamLayerView")],e),e};function c(t,e){if(t==null&&e==null)return null;const r={};return e!=null&&(r.geometry=e.toJSON()),t!=null&&(r.where=t),r}let s=class extends O(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([d(()=>this.layer.customParameters,t=>this._proxy.updateCustomParameters(t)),this.layer.on("send-message-to-socket",t=>this._proxy.sendMessageToSocket(t)),this.layer.on("send-message-to-client",t=>this._proxy.sendMessageToClient(t)),d(()=>this.layer.purgeOptions,()=>this._update()),d(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(m=>this.on(m,e)));const r=["data-received","message-received"].includes(t);r&&(this._enabledEventTypes.add(t),this._proxy.enableEvent(t,!0));const p=super.on(t,e),o=this;return _(()=>{p.remove(),r&&(o._proxy.closed||o.hasEventListener(t)||o._proxy.enableEvent(t,!1))})}queryLatestObservations(t,e){var r,p,o;if(!((r=this.layer.timeInfo)!=null&&r.endField||(p=this.layer.timeInfo)!=null&&p.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(t),e).then(m=>{const a=f.fromJSON(m);return a.features.forEach(l=>{l.layer=this.layer,l.sourceLayer=this.layer}),a})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var t;(t=this._proxy)==null||t.pauseStream()}_doResume(){var t;(t=this._proxy)==null||t.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:t=>{this.set(t.propertyName,t.value)}}}_createTileRendererHash(t){const e=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(t)+e}async _createServiceOptions(){var a;const t=this.layer,{objectIdField:e}=t,r=t.fields.map(l=>l.toJSON()),p=v(t.geometryType),o=((a=t.timeInfo)==null?void 0:a.toJSON())||null,m=t.spatialReference?t.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:p,objectIdField:e,timeInfo:o,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:m,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:t.customParameters}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([y("esri.views.2d.layers.StreamLayerView2D")],s);const Se=s;export{Se as default};
