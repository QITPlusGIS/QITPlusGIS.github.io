import{g as u,V as f,h as w,e as l,f as p,P as h,v as y,a as _,c as V}from"./uuid-fb53ae2e.js";import{m as v,u as C}from"./LayerView-8590f61c.js";import{i as c}from"./GraphicContainer-6ae2ea3e.js";import{r as g}from"./GraphicsView2D-cf1235ce.js";import"./index-e42a63f9.js";import"./scaleUtils-bba7f8bb.js";import"./Container-15ae821f.js";import"./mat3f32-6c416b1c.js";import"./parser-450a99c3.js";import"./mat4f32-60a2394b.js";import"./mat4-f091cc2b.js";import"./definitions-d96ec118.js";import"./enums-bdecffa2.js";import"./Texture-909bfb08.js";import"./capabilities-6261cefc.js";import"./map-7e5b196a.js";import"./Basemap-fc4d26ee.js";import"./loadAll-76369e9a.js";import"./PortalItem-01395053.js";import"./writeUtils-3673b1a7.js";import"./layerUtils-a8920453.js";import"./compilerUtils-811a6f43.js";import"./CollectionFlattener-5cd5b172.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-0a6b5a56.js";import"./TablesMixin-2871072c.js";import"./arcgisLayerUrl-fc2d909c.js";import"./Cyclical-8c26e7c7.js";import"./workers-3c8ba252.js";import"./TileInfo-238dd4b6.js";import"./jsxFactory-8f2e778f.js";import"./UpdatingHandles-9a53fef9.js";import"./signal-a61cc993.js";import"./GraphicsCollection-2966693c.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-b9bfc1f5.js";import"./vec2-aed931ac.js";import"./TileStore-6570f2cc.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./QuantizationParameters-a323cbe3.js";import"./TileInfoView-be4d795d.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-a2b8b8b6.js";import"./normalizeUtilsCommon-05ad6f6d.js";import"./mat3-1b291d2f.js";import"./vec2f32-eaf29605.js";import"./GoTo-2cdac7e7.js";import"./color-a4b304a5.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-d8dd2bed.js";import"./FeatureContainer-7b9710d6.js";import"./AttributeStoreView-43278226.js";import"./TiledDisplayObject-097260a9.js";import"./diffUtils-7a67a389.js";import"./labelingInfo-144cafce.js";import"./LabelClass-03af2031.js";import"./labelUtils-f4e57b25.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-6741d81c.js";import"./WGLContainer-a031049d.js";import"./FramebufferObject-f8937356.js";import"./ProgramTemplate-12d63168.js";import"./GeometryUtils-c1de866e.js";import"./heatmapUtils-c2569515.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-b84353bc.js";import"./featureConversionUtils-5ad02385.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-e6903ea9.js";import"./ExpandedCIM-870ec490.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-d023eda3.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-7998a127.js";import"./floatRGBA-04143c6a.js";import"./clusterUtils-80867c68.js";import"./MD5-715f37cd.js";import"./SizeVariable-d8011d21.js";import"./colorRamps-18dfa72a.js";import"./LegendOptions-21ba0c6d.js";import"./lengthUtils-5d9bdf3f.js";import"./util-0cf8b7dd.js";import"./TileContainer-a854d921.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-20755c4d.js";import"./projectionSupport-29174b46.js";import"./json-48e3ea08.js";import"./Matcher-5cde60f7.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-470e4fcd.js";import"./LRUCache-9b8f5520.js";import"./ComputedAttributeStorage-1c26e0db.js";import"./FieldsIndex-406a2400.js";import"./TimeOnly-f07e8b54.js";const d="sublayers",m="layerView";let n=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(r=>!!r.popupTemplate)).flat()}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(r);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):f.isCollection(i)&&(t=i.map(e=>e&&e.uid).toArray());const r=t==null?void 0:t.filter(w);return r!=null&&r.length?(this._addHighlight(r),l(()=>this._removeHighlight(r))):l()}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(r!=null&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const o=new c(this.view.featuresTilingScheme),s=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};n=_([V("esri.views.2d.layers.MapNotesLayerView2D")],n);const ft=n;export{ft as default};
