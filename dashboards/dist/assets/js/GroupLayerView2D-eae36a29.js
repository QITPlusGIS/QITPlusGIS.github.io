import{a as l,y as a,t as n,c as h,V as d,f as o,G as p,n as m}from"./uuid-854440a9.js";import{u as V,m as w}from"./LayerView-80524fa4.js";import"./index-2eca610e.js";import"./scaleUtils-54b03d24.js";import"./Container-79c4018f.js";import"./mat3f32-6c416b1c.js";import"./parser-575e2c11.js";import"./mat4f32-60a2394b.js";import"./mat4-8067289c.js";import"./definitions-8d472612.js";import"./enums-bdecffa2.js";import"./Texture-6ea577e5.js";import"./capabilities-b7174812.js";import"./map-3b85b863.js";import"./Basemap-b930c2b7.js";import"./loadAll-c963e2dd.js";import"./PortalItem-eaf53090.js";import"./writeUtils-afcbee82.js";import"./layerUtils-53516847.js";import"./compilerUtils-29e4db8f.js";import"./CollectionFlattener-0ef23bca.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-144ebf6f.js";import"./TablesMixin-cecb199e.js";import"./arcgisLayerUrl-db50ff50.js";import"./Cyclical-69deeef6.js";import"./workers-bc069650.js";import"./TileInfo-9470b42d.js";import"./jsxFactory-93a8ddd6.js";import"./UpdatingHandles-0afdfd5b.js";import"./signal-9aac29bc.js";import"./GraphicsCollection-1f93c1d2.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-196efb0a.js";import"./vec2-525139f9.js";import"./TileStore-5e70d226.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./QuantizationParameters-0cb320a2.js";import"./TileInfoView-c4c10e27.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-c97c170d.js";import"./normalizeUtilsCommon-092672b3.js";import"./mat3-5955b3db.js";import"./vec2f32-eaf29605.js";import"./GoTo-548e14ed.js";let r=class extends V{constructor(i){super(i),this.type="group",this.layerViews=new d}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),o(()=>{var i;return(i=this.layer)==null?void 0:i.visibilityMode},()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},p),o(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},p)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}set layerViews(i){this._set("layerViews",m(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>{const t=this._findLayerViewForLayer(e);return!!(t!=null&&t.visible)});return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(t=>o(()=>t.visible,s=>this._applyVisibility(()=>{s!==this.visible&&(t.visible=this.visible)},()=>this._applyExclusiveVisibility(s?t:null)),p)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e!=null&&e.visible?e:null))}_applyVisibility(i,e){var t,s;this._hasLayerViewVisibleOverrides()&&(((t=this.layer)==null?void 0:t.visibilityMode)==="inherited"?i():((s=this.layer)==null?void 0:s.visibilityMode)==="exclusive"&&e())}};l([a({cast:n})],r.prototype,"layerViews",null),l([a({readOnly:!0})],r.prototype,"updatingProgress",null),l([a()],r.prototype,"view",void 0),r=l([h("esri.views.layers.GroupLayerView")],r);const v=r;let y=class extends w(v){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};y=l([h("esri.views.2d.layers.GroupLayerView2D")],y);const hi=y;export{hi as default};
