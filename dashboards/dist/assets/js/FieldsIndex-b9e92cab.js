import{an as N,ao as S,ap as c,aq as y,ar as b,s as q,o as B,as as T,at as h,au as O,av as z,aw as D,ax as F}from"./uuid-896b9aab.js";function R(s){return"timeZone"in s}function L(s){return"timeZone"in s}function $(s){return"dateFieldsTimeZone"in s}class u{static fromJSON(e){return new u(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new u(e.fields??[],g(e))}static fromLayerJSON(e){return new u(e.fields??[],g(e))}constructor(e=[],t){var l;this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=t?new Map(t):null;const n=[];for(const i of this.fields){const r=i==null?void 0:i.name,a=_(r);if(r&&a){const o=d(r);this._fieldsMap.set(r,i),this._fieldsMap.set(o,i),this._normalizedFieldsMap.set(a,i),n.push(`${o}:${i.type}:${(l=this._timeZoneByFieldName)==null?void 0:l.get(r)}`),N(i)?(this.dateFields.push(i),this._dateFieldsSet.add(i)):S(i)&&(this._numericFieldsSet.add(i),this.numericFields.push(i)),c(i)||y(i)||(i.editable=i.editable==null||!!i.editable,i.nullable=i.nullable==null||!!i.nullable)}}n.sort(),this.uid=n.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)c(e)||y(e)||e.nullable||b(e)!==void 0||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===(e==null?void 0:e.uid)}has(e){return this.get(e)!=null}get(e){if(!e)return;let t=this._fieldsMap.get(e);return t||(t=this._fieldsMap.get(d(e))??this._normalizedFieldsMap.get(_(e)),t&&this._fieldsMap.set(e,t),t)}getTimeZone(e){const t=this.get(e&&typeof e!="string"?e.name:e);return t?this._timeZoneByFieldName?this._timeZoneByFieldName.get(t.name):t.type==="date"||t.type==="esriFieldTypeDate"?(q.getLogger("esri.layers.support.FieldsIndex").error(new B("getTimeZone:no-timezone-information",`no time zone information for field '${t.name}'`)),T):w.has(t.type)?h:null:null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return O(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){var t;return((t=this.get(e))==null?void 0:t.name)??void 0}toJSON(){return{fields:this.fields.map(e=>z(e)?e.toJSON():e),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function d(s){return s.trim().toLowerCase()}function _(s){var e;return((e=D(s))==null?void 0:e.toLowerCase())??""}const w=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function g(s){const e=new Map;if(!s.fields)return e;const t=s.datesInUnknownTimezone===!0,{timeInfo:n,editFieldsInfo:l}=s,i=(n?"startField"in n?n.startField:n.startTimeField:"")??"",r=(n?"endField"in n?n.endField:n.endTimeField:"")??"",a=$(s)?s.dateFieldsTimeZone??null:s.dateFieldsTimeReference?F(s.dateFieldsTimeReference):null,o=l?R(l)?l.timeZone??a:l.dateFieldsTimeReference?F(l.dateFieldsTimeReference):a??T:null,p=n?L(n)?n.timeZone??a:n.timeReference?F(n.timeReference):a:null,Z=new Map([[d((l==null?void 0:l.creationDateField)??""),o],[d((l==null?void 0:l.editDateField)??""),o],[d(i),p],[d(r),p]]);for(const{name:m,type:f}of s.fields)if(w.has(f))e.set(m,h);else if(f!=="date"&&f!=="esriFieldTypeDate")e.set(m,null);else if(t)e.set(m,h);else{const M=Z.get(d(m??""))??a;e.set(m,M)}return e}export{u as c};
