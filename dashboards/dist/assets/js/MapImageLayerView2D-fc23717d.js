import{t as r,v as a,bv as g,w as m,b as l,m as d,q as u,x as c}from"./index-bdd9114a.js";import{a as y}from"./BitmapContainer-7394bb05.js";import{m as f,u as x}from"./LayerView-b7e4d40b.js";import{r as w}from"./GraphicsView2D-7c45e778.js";import{a as v}from"./HighlightGraphicContainer-1b5d2089.js";import{v as _}from"./ExportStrategy-2e156668.js";import{m as H}from"./ExportImageParameters-4411c534.js";import{a as I}from"./RefreshableLayerView-1e26e0db.js";import{G as V,r as b}from"./drapedUtils-b8b0ce08.js";import"./WGLContainer-0ba2e5f3.js";import"./FramebufferObject-90da6fee.js";import"./Texture-2e1bfa4d.js";import"./ProgramTemplate-219edeba.js";import"./color-7eb35cd5.js";import"./GeometryUtils-90486f49.js";import"./config-1337d16e.js";import"./Container-53ef30e5.js";import"./earcut-2d748c4f.js";import"./featureConversionUtils-29e5d71f.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-6eb2bff6.js";import"./ExpandedCIM-e8ae2583.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-65be6e71.js";import"./utils-d90cc435.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-6d48d3ad.js";import"./floatRGBA-c2bfba21.js";import"./normalizeUtilsSync-78fceabd.js";import"./projectionSupport-9a5294ee.js";import"./json-48e3ea08.js";import"./AttributeStoreView-59069d1f.js";import"./TiledDisplayObject-de886c93.js";import"./util-400eea0a.js";import"./Matcher-e2b5f0e5.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-b7218cee.js";import"./ComputedAttributeStorage-cf5fcb19.js";import"./TimeOnly-b3735f81.js";import"./BaseGraphicContainer-4708316f.js";import"./FeatureContainer-38095bdf.js";import"./TileContainer-2d258528.js";import"./vec3f32-2da9db36.js";import"./Bitmap-9ced3985.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-636bcdd1.js";import"./popupUtils-57751b93.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([a()],e.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],e.prototype,"floors",null),r([a({readOnly:!0})],e.prototype,"exportImageVersion",null),r([a()],e.prototype,"layer",void 0),r([a()],e.prototype,"suspended",void 0),r([a(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let o=class extends P(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,s=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>b(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:s,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,s){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}fetchImageBitmap(t,e,i,s){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([a()],o.prototype,"strategy",void 0),r([a()],o.prototype,"updating",void 0),o=r([m("esri.views.2d.layers.MapImageLayerView2D")],o);const _t=o;export{_t as default};
