import{t as r,v as a,bp as g,w as m,b as l,m as d,q as u,x as c}from"./index-709d080c.js";import{a as y}from"./BitmapContainer-0d4c1e52.js";import{m as f,u as x}from"./LayerView-6553e034.js";import{r as w}from"./GraphicsView2D-94092b25.js";import{a as v}from"./HighlightGraphicContainer-6d442184.js";import{v as _}from"./ExportStrategy-5aa1a58a.js";import{m as H}from"./ExportImageParameters-768ba672.js";import{a as I}from"./RefreshableLayerView-d347ebd1.js";import{G as V,r as b}from"./drapedUtils-4c0d1a39.js";import"./WGLContainer-1a8b1ee3.js";import"./FramebufferObject-3b96e2fc.js";import"./Texture-10a5939e.js";import"./ProgramTemplate-1082d575.js";import"./color-906689d6.js";import"./GeometryUtils-58fd4c09.js";import"./config-1337d16e.js";import"./Container-a559bf1c.js";import"./earcut-542fe939.js";import"./scaleUtils-139fb2fb.js";import"./ExpandedCIM-ef671ba0.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-3c4fa38c.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-0cd11aba.js";import"./floatRGBA-028de362.js";import"./normalizeUtilsSync-6a6170eb.js";import"./projectionSupport-1063052c.js";import"./json-48e3ea08.js";import"./AttributeStoreView-e38d3215.js";import"./TiledDisplayObject-ae6319e7.js";import"./util-de83a503.js";import"./Matcher-b851c754.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-845960ce.js";import"./ComputedAttributeStorage-b467c3de.js";import"./TimeOnly-94cbed0e.js";import"./BaseGraphicContainer-dc6c6339.js";import"./FeatureContainer-6bd1f2a0.js";import"./TileContainer-c80bebf8.js";import"./vec3f32-2da9db36.js";import"./Bitmap-3af22730.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-56268c12.js";import"./popupUtils-bf474c38.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([a()],e.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],e.prototype,"floors",null),r([a({readOnly:!0})],e.prototype,"exportImageVersion",null),r([a()],e.prototype,"layer",void 0),r([a()],e.prototype,"suspended",void 0),r([a(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let o=class extends P(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,s=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>b(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:s,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,s){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}fetchImageBitmap(t,e,i,s){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([a()],o.prototype,"strategy",void 0),r([a()],o.prototype,"updating",void 0),o=r([m("esri.views.2d.layers.MapImageLayerView2D")],o);const ft=o;export{ft as default};
