import{a as e,y as o,c as h,b as g,s as l,f as d}from"./uuid-896b9aab.js";import{i as u}from"./GraphicsCollection-27c3cf10.js";import{a as c}from"./BitmapContainer-2bac0446.js";import{m as y,u as f}from"./LayerView-1722f663.js";import{r as x}from"./GraphicsView2D-07213afd.js";import{a as w}from"./HighlightGraphicContainer-e4078d4d.js";import{v as _}from"./ExportStrategy-9d697169.js";import{j as v}from"./commonProperties-6f21cf48.js";import{m as H}from"./ExportImageParameters-f3f7d163.js";import{a as I}from"./RefreshableLayerView-b34404f8.js";import{G as V,r as P}from"./drapedUtils-9fbdddf7.js";import"./index-36e9aec6.js";import"./WGLContainer-510e2b46.js";import"./definitions-061b188f.js";import"./FramebufferObject-d3749952.js";import"./Texture-fd122722.js";import"./capabilities-920791a4.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-3fbc9a92.js";import"./commonjsHelpers-2f3e7994.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-3f498e73.js";import"./enums-f1a6a48a.js";import"./GeometryUtils-82ac3342.js";import"./heatmapUtils-27bad519.js";import"./vec4f64-3c9d0901.js";import"./mat3f32-6c416b1c.js";import"./StyleDefinition-29c49b98.js";import"./vec2f32-eaf29605.js";import"./config-1337d16e.js";import"./Container-9161ffcf.js";import"./parser-14d23883.js";import"./mat4f32-60a2394b.js";import"./mat4-318655b6.js";import"./earcut-b84353bc.js";import"./vec2-d237980c.js";import"./vec2f64-95bf678d.js";import"./featureConversionUtils-35751811.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-abdae12b.js";import"./map-b4b15665.js";import"./Basemap-b3d6bdf6.js";import"./loadAll-9301c4be.js";import"./PortalItem-6f01e175.js";import"./writeUtils-5fa55c8b.js";import"./layerUtils-71133796.js";import"./compilerUtils-b3a0c560.js";import"./CollectionFlattener-0d53fafe.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-063adf0d.js";import"./TablesMixin-377aa540.js";import"./arcgisLayerUrl-babbe1bf.js";import"./Cyclical-2d9f8684.js";import"./workers-d41a4c7e.js";import"./TileInfo-6cf97248.js";import"./jsxFactory-ce441684.js";import"./UpdatingHandles-bf7dcb98.js";import"./signal-e828fbec.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-5457869f.js";import"./TileStore-a2c7e73d.js";import"./quickselect-149a6b43.js";import"./QuantizationParameters-8e0f5300.js";import"./TileInfoView-2d740459.js";import"./normalizeUtils-74c17e0f.js";import"./normalizeUtilsCommon-24d2691e.js";import"./mat3-b213082c.js";import"./GoTo-4963ffd1.js";import"./ExpandedCIM-87959b09.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-95680277.js";import"./GeometryUtils-984e8446.js";import"./utils-e347ed86.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-9e4adcc7.js";import"./floatRGBA-54854774.js";import"./normalizeUtilsSync-a34a5045.js";import"./projectionSupport-28f855f9.js";import"./json-48e3ea08.js";import"./LabelClass-961ff56d.js";import"./labelUtils-21b484ec.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-3767cca3.js";import"./AttributeStoreView-1aeb19c3.js";import"./TiledDisplayObject-bc86ba54.js";import"./diffUtils-a3a9db51.js";import"./labelingInfo-926370a5.js";import"./clusterUtils-d4a9bc58.js";import"./MD5-715f37cd.js";import"./SizeVariable-b5ce232d.js";import"./colorRamps-25747e5c.js";import"./LegendOptions-cec1028c.js";import"./lengthUtils-4ab57232.js";import"./util-cac34b66.js";import"./Matcher-ba0f4e8a.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-4b3ef722.js";import"./LRUCache-6cfe7ff6.js";import"./ComputedAttributeStorage-350112b1.js";import"./FieldsIndex-b9e92cab.js";import"./TimeOnly-b856efbe.js";import"./BaseGraphicContainer-49907c2e.js";import"./FeatureContainer-3d9f7e09.js";import"./TileContainer-4a81862a.js";import"./vec3f32-2da9db36.js";import"./Bitmap-551a6ec6.js";import"./ElevationInfo-8d60fc5a.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-3deaaa2f.js";import"./popupUtils-1efb2587.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return e([o()],i.prototype,"exportImageParameters",void 0),e([o({readOnly:!0})],i.prototype,"floors",null),e([o({readOnly:!0})],i.prototype,"exportImageVersion",null),e([o()],i.prototype,"layer",void 0),e([o()],i.prototype,"suspended",void 0),e([o(v)],i.prototype,"timeExtent",void 0),i=e([h("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new u,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{g(r)||l.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,p=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,s)=>P(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(d(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,p){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,r,p){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};e([o()],m.prototype,"strategy",void 0),e([o()],m.prototype,"updating",void 0),m=e([h("esri.views.2d.layers.MapImageLayerView2D")],m);const Si=m;export{Si as default};
