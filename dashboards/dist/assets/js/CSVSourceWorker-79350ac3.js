import{aw as _,bZ as j,o as I,b_ as P,b as R,s as V,a1 as L,z as A,as as T,ar as G,d as M,aU as Q,aY as Y,M as Z,bY as B,bu as J}from"./uuid-896b9aab.js";import{e as U,t as W}from"./date-d60e9730.js";import{B as z}from"./arcgisLayerUrl-babbe1bf.js";import{t as H}from"./json-48e3ea08.js";import{a as K,t as X}from"./OptimizedFeature-ded94d90.js";import{m as ee}from"./FeatureStore-09d1bb91.js";import{x as te}from"./projectionSupport-28f855f9.js";import{W as ie}from"./QueryEngine-3ae90aa6.js";import{a as ne}from"./number-9fa82863.js";import{i as re,o as oe}from"./clientSideDefaults-cb28ed37.js";import{c as w}from"./FieldsIndex-b9e92cab.js";import"./index-36e9aec6.js";import"./featureConversionUtils-35751811.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BoundsStore-3d94f5b8.js";import"./PooledRBush-454fcf8e.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./timeSupport-617633c4.js";import"./normalizeUtils-74c17e0f.js";import"./normalizeUtilsCommon-24d2691e.js";import"./LRUCache-6cfe7ff6.js";import"./WhereClause-fe14187b.js";import"./TimeOnly-b856efbe.js";import"./fieldType-39083810.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./quantizationUtils-9e4adcc7.js";import"./utils-210826be.js";import"./heatmapUtils-27bad519.js";import"./vec4f64-3c9d0901.js";import"./utils-191581f9.js";import"./basemapUtils-063adf0d.js";import"./Basemap-b3d6bdf6.js";import"./loadAll-9301c4be.js";import"./PortalItem-6f01e175.js";import"./writeUtils-5fa55c8b.js";import"./layerUtils-71133796.js";import"./mat4f32-60a2394b.js";import"./mat4-318655b6.js";import"./generateRendererUtils-7aee65c3.js";import"./signal-e828fbec.js";import"./RenderState-1d6218ee.js";import"./defaultsJSON-b087dd4d.js";const E=/^\s*"([\S\s]*)"\s*$/,S=/""/g,O=`
`,se=[","," ",";","|","	"];function*$(r,t,e){let i=0;for(;i<=r.length;){const n=r.indexOf(t,i),o=r.substring(i,n>-1?n:void 0);i+=o.length+t.length,e&&!o.trim()||(yield o)}}function q(r){const t=r.includes(`\r
`)?`\r
`:O;return $(r,t,!0)}function C(r,t){return $(r,t,!1)}function ae(r,t,e){r=r.trim(),t=t==null?void 0:t.trim();const i=[],n=Array.from(new Set([e==null?void 0:e.delimiter,...se])).filter(s=>s!=null);for(const s of n){const a=N(r,s).length,u=N(t,s).length??a;a>1&&i.push({weight:Math.min(a,u),delimiter:s})}const o=i.sort(({weight:s},{weight:a})=>a-s).map(({delimiter:s})=>s);for(const s of o){const a=le(k(r,s).names,e==null?void 0:e.longitudeField,e==null?void 0:e.latitudeField);if(a.longitudeFieldName&&a.latitudeFieldName)return{delimiter:s,locationInfo:a}}return{delimiter:o[0],locationInfo:null}}function*v(r,t,e,i=()=>Object.create(null)){const n=q(r);n.next();let o="",s="",a=0,u=i(),d=0;e:for(const h of n){const f=C(h,e);for(const y of f)if(o+=s+y,s="",a+=D(y),a%2==0){if(a>0){const g=E.exec(o);if(!g){u=i(),d=0,o="",a=0;continue e}u[t[d]]=g[1].replaceAll(S,'"'),d++}else u[t[d]]=o,d++;o="",a=0}else s=e;a===0?(yield u,u=i(),d=0):s=O}}function k(r,t){const e=N(r,t).filter(n=>n!=null),i=e.map(n=>_(n));for(let n=i.length-1;n>=0;n--)i[n]||(i.splice(n,1),e.splice(n,1));return{names:i,aliases:e}}function N(r,t){if(!(r!=null&&r.length))return[];const e=[];let i="",n="",o=0;const s=C(r,t);for(const a of s)if(i+=n+a,n="",o+=D(a),o%2==0){if(o>0){const u=E.exec(i);u&&e.push(u[1].replaceAll(S,'"'))}else e.push(i);i="",o=0}else n=t;return e}function D(r){let t=0,e=0;for(e=r.indexOf('"',e);e>=0;)t++,e=r.indexOf('"',e+1);return t}function le(r,t,e){var s,a;t=(s=_(t))==null?void 0:s.toLowerCase(),e=(a=_(e))==null?void 0:a.toLowerCase();const i=r.map(u=>u.toLowerCase()),n=t?r[i.indexOf(t)]:null,o=e?r[i.indexOf(e)]:null;return{longitudeFieldName:n||r[i.indexOf(me.find(u=>i.includes(u)))],latitudeFieldName:o||r[i.indexOf(de.find(u=>i.includes(u)))]}}function ce(r,t,e,i,n){const o=[],s=v(r,e,t),a=[];for(const u of s){if(a.length===10)break;a.push(u)}for(let u=0;u<e.length;u++){const d=e[u],h=i[u];if(d===n.longitudeFieldName||d===n.latitudeFieldName)o.push({name:d,type:"esriFieldTypeDouble",alias:h});else{let f;switch(ue(a.map(y=>y[d]))){case"integer":f="esriFieldTypeInteger";break;case"double":f="esriFieldTypeDouble";break;case"date":f="esriFieldTypeDate";break;default:f="esriFieldTypeString"}o.push({name:d,type:f,alias:h,length:j(f)})}}return o}function ue(r){if(!r.length)return"string";const t=/[^+\-.,0-9]/;return r.map(e=>{if(e!==""){if(!t.test(e)){let i=x(e);if(!isNaN(i))return/[.,]/.test(e)||!Number.isInteger(i)||i>214783647||i<-214783648?"double":"integer";if(e.includes("E")&&(i=Number(e),!Number.isNaN(i)||e.includes(",")&&(e=e.replace(",","."),i=Number(e),!Number.isNaN(i))))return"double"}return U(e)?"date":"string"}}).reduce((e,i)=>e===void 0?i:i===void 0?e:e===i?i:e==="string"||i==="string"?"string":e==="double"||i==="double"?"double":void 0)}const x=function(){const r=ne(),t=new RegExp("^"+r.regexp+"$"),e=new RegExp("["+r.group+"\\s\\xa0]","g"),i=r.factor;return n=>{const o=t.exec(n);if(r.factor=i,!o)return NaN;let s=o[1];if(!o[1]){if(!o[2])return NaN;s=o[2],r.factor*=-1}return s=s.replace(e,"").replace(r.decimal,"."),+s*r.factor}}(),de=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],me=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"],fe=oe("esriGeometryPoint"),pe=["csv"],he=[0,0];class ye{constructor(t,e){this.x=t,this.y=e}}class at{constructor(){this._queryEngine=null,this._snapshotFeatures=async t=>{const e=await this._fetch(t);return this._createFeatures(e)}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){var u;this._loadOptions=t;const[i]=await Promise.all([this._fetch(e.signal),this._checkProjection((u=t==null?void 0:t.parsingOptions)==null?void 0:u.spatialReference)]),n=ge(i,t);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const o=await this._createFeatures(i);this._queryEngine.featureStore.addMany(o);const{fullExtent:s,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,a){const{start:d,end:h}=a;n.layerDefinition.timeInfo.timeExtent=[d,h]}return n}async applyEdits(){throw new I("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var n;this._loadOptions.customParameters=t,(n=this._snapshotTask)==null||n.abort(),this._snapshotTask=P(this._snapshotFeatures),this._snapshotTask.promise.then(o=>{this._queryEngine.featureStore.clear(),o&&this._queryEngine.featureStore.addMany(o)},o=>{this._queryEngine.featureStore.clear(),R(o)||V.getLogger("esri.layers.CSVLayer").error(new I("csv-layer:refresh","An error occurred during refresh",{error:o}))}),await this._waitSnapshotComplete();const{fullExtent:e,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:e,timeExtent:i}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:e,customParameters:i}=this._loadOptions;if(!e)throw new I("csv-layer:invalid-source","url not defined");const n=L(e);return(await A(n.path,{query:{...n.query,...i},responseType:"text",signal:t})).data}_createQueryEngine(t){const{objectIdField:e,fields:i,extent:n,timeInfo:o}=t.layerDefinition,s=new ee({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new ie({fieldsIndex:w.fromLayerJSON({fields:i,dateFieldsTimeReference:{timeZoneIANA:T}}),geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:o,objectIdField:e,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})}async _createFeatures(t){const{latitudeFieldName:e,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:o,spatialReference:s}=this._queryEngine;let a=[];const u=[],d=o.fields.filter(l=>l.name!==n).map(l=>l.name);let h=0;const f={};for(const l of o.fields)if(l.type!=="esriFieldTypeOID"&&l.type!=="esriFieldTypeGlobalID"){const p=G(l);p!==void 0&&(f[l.name]=p)}const y=v(t,d,this._delimiter,re(f,n));for(const l of y){const p=this._parseCoordinateValue(l[e]),F=this._parseCoordinateValue(l[i]);if(F!=null&&p!=null&&!isNaN(p)&&!isNaN(F)){l[e]=p,l[i]=F;for(const c in l)if(c!==e&&c!==i){if(o.isDateField(c))l[c]=W(l[c]);else if(o.isNumericField(c)){const m=x(l[c]);isNaN(m)?l[c]=null:l[c]=m}}l[n]=h,h++,a.push(new ye(F,p)),u.push(l)}}if(!M({wkid:4326},s))if(Q(s))for(const l of a)[l.x,l.y]=Y(l.x,l.y,he);else a=z(H,a,Z.WGS84,s,null,null);const g=[];for(let l=0;l<a.length;l++){const{x:p,y:F}=a[l],c=u[l];c[n]=l+1,g.push(new K(new X([],[p,F]),c,null,c[n]))}return g}_parseCoordinateValue(t){if(t==null||t==="")return null;let e=x(t);return(isNaN(e)||Math.abs(e)>181)&&(e=parseFloat(t)),e}async _checkProjection(t){try{await te(B,t)}catch{throw new I("csv-layer:projection-not-supported","Projection not supported")}}}function ge(r,t){var l,p,F;const e=t.parsingOptions||{},i={delimiter:e.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:e.latitudeField,longitudeFieldName:e.longitudeField}},n=i.layerDefinition={name:J(t.url,pe)||"csv",dateFieldsTimeReference:{timeZoneIANA:T},drawingInfo:fe,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:e.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:e.spatialReference||{wkid:4326}}},o=q(r),s=(l=o.next().value)==null?void 0:l.trim(),a=(p=o.next().value)==null?void 0:p.trim();if(!s)throw new I("csv-layer:empty-csv","CSV is empty",{csv:r});const{delimiter:u,locationInfo:d}=ae(s,a,e);if(!u)throw new I("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:s,secondLine:a,parsingOptions:e});if(!d)throw new I("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:s,secondLine:a,parsingOptions:e});i.locationInfo=d,i.delimiter=u;const{names:h,aliases:f}=k(s,u),y=ce(r,i.delimiter,h,f,i.locationInfo);if((F=e.fields)!=null&&F.length){const c=new w(e.fields);for(const m of y){const b=c.get(m.name);b&&Object.assign(m,b)}}if(!y.some(c=>c.type==="esriFieldTypeOID"&&(n.objectIdField=c.name,!0))){const c={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};n.objectIdField=c.name,y.unshift(c)}n.fields=y;const g=new w(n.fields);if(i.locationInfo&&(i.locationInfo.latitudeFieldName=g.get(i.locationInfo.latitudeFieldName).name,i.locationInfo.longitudeFieldName=g.get(i.locationInfo.longitudeFieldName).name),n.timeInfo){const c=n.timeInfo;if(c.startTimeField){const m=g.get(c.startTimeField);m?(c.startTimeField=m.name,m.type="esriFieldTypeDate"):c.startTimeField=null}if(c.endTimeField){const m=g.get(c.endTimeField);m?(c.endTimeField=m.name,m.type="esriFieldTypeDate"):c.endTimeField=null}if(c.trackIdField){const m=g.get(c.trackIdField);c.trackIdField=m?m.name:null}c.startTimeField||c.endTimeField||(n.timeInfo=null)}return i}export{at as default};
