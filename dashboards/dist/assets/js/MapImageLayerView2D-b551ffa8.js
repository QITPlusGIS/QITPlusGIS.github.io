import{a as e,y as o,c as h,b as g,s as l,f as d}from"./uuid-8543c34e.js";import{i as u}from"./GraphicsCollection-86205b66.js";import{a as c}from"./BitmapContainer-dc670e79.js";import{m as y,u as f}from"./LayerView-456ec160.js";import{r as x}from"./GraphicsView2D-262111e5.js";import{a as w}from"./HighlightGraphicContainer-aa554dae.js";import{v as _}from"./ExportStrategy-8d5ea2f7.js";import{j as v}from"./commonProperties-33a2de5d.js";import{m as H}from"./ExportImageParameters-99221a22.js";import{a as I}from"./RefreshableLayerView-fd7aa8e0.js";import{G as V,r as P}from"./drapedUtils-f6d678a0.js";import"./index-71f6c0ac.js";import"./WGLContainer-4ac101c7.js";import"./definitions-aec0bc6e.js";import"./FramebufferObject-1aab62a8.js";import"./Texture-975d76ef.js";import"./capabilities-97ba1202.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-1d255117.js";import"./commonjsHelpers-2f3e7994.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-13bc1b28.js";import"./enums-f1a6a48a.js";import"./GeometryUtils-43a9ebf1.js";import"./heatmapUtils-7f7225e7.js";import"./vec4f64-3c9d0901.js";import"./mat3f32-6c416b1c.js";import"./StyleDefinition-29c49b98.js";import"./vec2f32-eaf29605.js";import"./config-1337d16e.js";import"./Container-893ba426.js";import"./parser-01d0d370.js";import"./mat4f32-60a2394b.js";import"./mat4-f427906c.js";import"./earcut-b84353bc.js";import"./vec2-32a2877d.js";import"./vec2f64-95bf678d.js";import"./featureConversionUtils-f2db813b.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-8d8ec80b.js";import"./map-286f7c32.js";import"./Basemap-40557d3d.js";import"./loadAll-97b0a04e.js";import"./PortalItem-40a43a90.js";import"./writeUtils-e7cfa8a6.js";import"./layerUtils-60bab848.js";import"./compilerUtils-b6fccf25.js";import"./CollectionFlattener-e4b1221f.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-a6a84bcd.js";import"./TablesMixin-d24d5b39.js";import"./arcgisLayerUrl-ec2f2135.js";import"./Cyclical-e795bbc8.js";import"./workers-d869425a.js";import"./TileInfo-fde75a2c.js";import"./jsxFactory-7ff493e4.js";import"./UpdatingHandles-33b1c156.js";import"./signal-727603b5.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-45802eb2.js";import"./TileStore-86a22d37.js";import"./quickselect-149a6b43.js";import"./QuantizationParameters-5bcf1f9a.js";import"./TileInfoView-8324374b.js";import"./normalizeUtils-dd0d9796.js";import"./normalizeUtilsCommon-1d284c7d.js";import"./mat3-1f4b34e6.js";import"./GoTo-1619a2f4.js";import"./ExpandedCIM-37ed220f.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-c8641365.js";import"./GeometryUtils-984e8446.js";import"./utils-22fd4a50.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-82ba167c.js";import"./floatRGBA-c189677f.js";import"./normalizeUtilsSync-f32e749c.js";import"./projectionSupport-71ed6263.js";import"./json-48e3ea08.js";import"./LabelClass-766d0bd7.js";import"./labelUtils-308d1e86.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-f5725ae9.js";import"./AttributeStoreView-e47576a0.js";import"./TiledDisplayObject-5427d203.js";import"./diffUtils-2f40bb41.js";import"./labelingInfo-cc2f73a7.js";import"./clusterUtils-51d649eb.js";import"./MD5-715f37cd.js";import"./SizeVariable-569fefc3.js";import"./colorRamps-6df6d6f7.js";import"./LegendOptions-5787bf37.js";import"./lengthUtils-7e41a327.js";import"./util-daa007fc.js";import"./Matcher-1a5e5654.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-c0ba18dc.js";import"./LRUCache-20778572.js";import"./ComputedAttributeStorage-4105f1ef.js";import"./FieldsIndex-8f568a88.js";import"./TimeOnly-8be2111b.js";import"./BaseGraphicContainer-c0a801ad.js";import"./FeatureContainer-96b9e7e1.js";import"./TileContainer-309cc158.js";import"./vec3f32-2da9db36.js";import"./Bitmap-1ed23743.js";import"./ElevationInfo-4de725df.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-98542cd3.js";import"./popupUtils-8f4971ae.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return e([o()],i.prototype,"exportImageParameters",void 0),e([o({readOnly:!0})],i.prototype,"floors",null),e([o({readOnly:!0})],i.prototype,"exportImageVersion",null),e([o()],i.prototype,"layer",void 0),e([o()],i.prototype,"suspended",void 0),e([o(v)],i.prototype,"timeExtent",void 0),i=e([h("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new u,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{g(r)||l.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,p=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,s)=>P(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(d(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,p){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,r,p){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};e([o()],m.prototype,"strategy",void 0),e([o()],m.prototype,"updating",void 0),m=e([h("esri.views.2d.layers.MapImageLayerView2D")],m);const Si=m;export{Si as default};
