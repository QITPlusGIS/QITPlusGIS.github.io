import{t as s,v as h,bp as C,w as I,D as M,s as l,m as E,q,x as R,aV as V}from"./index-709d080c.js";import{a as b}from"./BitmapContainer-0d4c1e52.js";import{m as $,u as U}from"./LayerView-6553e034.js";import{v as W}from"./ExportStrategy-5aa1a58a.js";import{a as L}from"./RefreshableLayerView-d347ebd1.js";import{o as j}from"./ExportWMSImageParameters-685d430a.js";import"./WGLContainer-1a8b1ee3.js";import"./FramebufferObject-3b96e2fc.js";import"./Texture-10a5939e.js";import"./ProgramTemplate-1082d575.js";import"./color-906689d6.js";import"./GeometryUtils-58fd4c09.js";import"./config-1337d16e.js";import"./Container-a559bf1c.js";import"./earcut-542fe939.js";import"./scaleUtils-139fb2fb.js";import"./Bitmap-3af22730.js";const H=t=>{let e=class extends t{initialize(){this.exportImageParameters=new j({layer:this.layer})}destroy(){this.exportImageParameters=M(this.exportImageParameters)}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(r){const{layer:a}=this;if(!r)return Promise.reject(new l("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const{popupEnabled:n}=a;if(!n)return Promise.reject(new l("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:n}));const u=this.createFetchPopupFeaturesQuery(r);if(!u)return Promise.resolve([]);const{extent:i,width:o,height:p,x:d,y:c}=u;if(!(i&&o&&p))throw new l("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:i,width:o,height:p});return a.fetchFeatureInfo(i,o,p,d,c)}};return s([h()],e.prototype,"exportImageParameters",void 0),s([h({readOnly:!0})],e.prototype,"exportImageVersion",null),s([h()],e.prototype,"layer",void 0),s([h(C)],e.prototype,"timeExtent",void 0),e=s([I("esri.layers.mixins.WMSLayerView")],e),e};let m=class extends H(L($(U))){constructor(){super(...arguments),this.bitmapContainer=new b}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{E(e)||q.getLogger(this).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new b,this.container.addChild(this.bitmapContainer),this.strategy=new W({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=M(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:n}=t,{spatialReference:u}=e;let i,o=0,p=0;if(r.children.some(F=>{const{width:x,height:f,resolution:w,x:y,y:g}=F,v=y+w*x,P=g-w*f;return a>=y&&a<=v&&n<=g&&n>=P&&(i=new V({xmin:y,ymin:P,xmax:v,ymax:g,spatialReference:u}),o=x,p=f,!0)}),!i)return null;const d=i.width/o,c=Math.round((a-i.xmin)/d),S=Math.round((i.ymax-n)/d);return{extent:i,width:o,height:p,x:c,y:S}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};s([h()],m.prototype,"strategy",void 0),s([h()],m.prototype,"updating",void 0),m=s([I("esri.views.2d.layers.WMSLayerView2D")],m);const te=m;export{te as default};
