import{s as g,R as I,hi as es,e as ts,iC as _,dr as v,iD as S,bF as h,a2 as m,de as u,es as os,aN as as,iE as rs,aP as U,hR as ns,aQ as is,ds as cs,hM as ls,q as us}from"./index-709d080c.js";import{h as ps,N as ds,i as k,o as B,A as ms}from"./FeatureLayerSource-1f739523.js";import"./mat4f64-1413b4a7.js";import"./MeshGeoreferencedRelativeVertexSpace-0e5666c8.js";import"./vec32-8aab57b8.js";import"./editingSupport-4c352db2.js";import"./clientSideDefaults-793fa108.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./QueryTask-f18f06ad.js";import"./executeQueryPBF-e5a83a2f.js";const w="upload-assets",y=()=>new Error;class fs extends g{constructor(){super(`${w}:unsupported`,"Layer does not support asset uploads.",y())}}class hs extends g{constructor(){super(`${w}:no-glb-support`,"Layer does not support glb.",y())}}let gs=class extends g{constructor(){super(`${w}:no-supported-source`,"No supported external source found",y())}},ws=class extends g{constructor(){super(`${w}:not-base-64`,"Expected gltf data in base64 format after conversion.",y())}},ys=class extends g{constructor(){super(`${w}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",y())}};class Ps extends g{constructor(t,s){super(`${w}:bad-response`,`Bad response. Uploaded ${t} items and received ${s} results.`,y())}}let bs=class extends g{constructor(t,s){super(`${w}-layer:upload-failed`,`Failed to upload mesh file ${t}. Error code: ${(s==null?void 0:s.code)??"-1"}. Error message: ${(s==null?void 0:s.messages)??"unknown"}`,y())}};class q extends g{constructor(t){super(`${w}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${t}, but it does not list it in its supported formats.`,y())}}let Ts=class extends g{constructor(){super(`${w}:convert3D-failed`,"convert3D failed.")}};const F={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function P(e,t=o=>{},s){return new As(e,t,s)}class As{constructor(t,s=a=>{},o){if(this.onProgress=s,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof t=="number"){this._weights={};for(let a=0;a<t;a++){const r=a,n=1/t;this._weights[r]=n,this._progressMap.set(r,0)}}else this._weights=t;this.emitProgress()}emitProgress(){let t=0;for(const[s,o]of this._progressMap.entries())t+=o*this._weights[s];if(t===1&&I("enable-feature:esri-3dofl-upload-timings")){const s=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${s} sec`);for(const[o,a]of this._timingsMap){const r=Math.round(a.end-a.start)/1e3,n=Math.round(r/s*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:r,relativeTime:n})}}this.onProgress(t)}setProgress(t,s){if(this._progressMap.set(t,s),I("enable-feature:esri-3dofl-upload-timings")){const o=performance.now();this._startTime??(this._startTime=o);const a=es(this._timingsMap,t,()=>({start:o,end:0}));s===1&&(a.end=o)}this.emitProgress()}simulate(t,s){return C(o=>this.setProgress(t,o),s)}makeOnProgress(t){return s=>this.setProgress(t,s)}}function C(e=s=>{},t=Es){const s=performance.now();e(0);const o=setInterval(()=>{const a=performance.now()-s,r=1-Math.exp(-a/t);e(r)},Ms);return ts(()=>{clearInterval(o),e(1)})}function $s(e,t=vs){return _(S(e*O/t))}function xs(e,t=Fs){return _(S(e*O/t))}const vs=10,Fs=10,O=8e-6,Ms=v(50),Es=v(1e3),R=1e6,D=20*R,js=2e9,Ns=3;async function Is({data:e,name:t,description:s},o,a){let r=null;try{const n=h(o,"uploads"),i=h(n,"info"),{data:c}=await m(i,{query:{f:"json"},responseType:"json"});u(a);const p=os(o),l=c.maxUploadFileSize*R,f=p?js:l,x=p?Math.min(D,l):D;if(e.size>f)throw new Error("Data too large");const J=h(n,"register"),{data:M}=await m(J,{query:{f:"json",itemName:Ds(t),description:s},responseType:"json",method:"post"});if(u(a),!M.success)throw new Error("Registration failed");const{itemID:W}=M.item;r=h(n,W);const K=h(r,"uploadPart"),E=Math.ceil(e.size/x),b=new Array;for(let d=0;d<E;++d)b.push(e.slice(d*x,Math.min((d+1)*x,e.size)));const T=b.slice().reverse(),j=new Array,Q=P(E,a==null?void 0:a.onProgress,"uploadItem"),V=async()=>{for(;T.length!==0;){const d=b.length-T.length,A=T.pop(),$=new FormData,Y=Q.simulate(d,$s(A.size));try{const Z=A;$.append("f","json"),$.append("file",Z),$.append("partId",`${d}`);const{data:ss}=await m(K,{timeout:0,body:$,responseType:"json",method:"post"});if(u(a),!ss.success)throw new Error("Part upload failed")}finally{Y.remove()}}};for(let d=0;d<Ns&&T.length!==0;++d)j.push(V());await Promise.all(j);const X=h(r,"commit"),{data:N}=await m(X,{query:{f:"json",parts:b.map((d,A)=>A).join(",")},responseType:"json",method:"post"});if(u(a),!N.success)throw new Error("Commit failed");return N.item}catch(n){if(r!=null){const i=h(r,"delete");await m(i,{query:{f:"json"},responseType:"json",method:"post"})}throw n}}function Ds(e){return e.replaceAll("/","_").replaceAll("\\","_")}async function fe(e,t,s){var r;const o=e.length;if(!o)return(r=s==null?void 0:s.onProgress)==null||r.call(s,1),[];const a=P(o,s==null?void 0:s.onProgress,"uploadAssets");return Promise.all(e.map((n,i)=>_s(n,t,{...s,onProgress:a.makeOnProgress(i)})))}async function _s(e,{layer:t,ongoingUploads:s},o){var n;const a=s.get(e);if(a)return a;if(!Vs(t))throw new fs;if(Ss(e,t))return(n=o==null?void 0:o.onProgress)==null||n.call(o,1),e;const r=Us(e,t,o);s.set(e,r);try{await r}finally{s.delete(e)}return e}function Ss(e,t){const{parsedUrl:s}=t;return s!=null&&e.metadata.externalSources.some(o=>ps(o,s))}async function Us(e,t,s){const{metadata:o}=e,{displaySource:a}=o,r=L(a==null?void 0:a.source,t),n=!!r,i=o.externalSources.length>0,c=n?ks(r,t,s):i?Bs(e,t,s):qs(e,t,s),p=await c;return u(s),e.addExternalSources([p]),e}async function ks(e,t,s){return{source:await z(e,t,s),original:!0}}async function Bs(e,t,s){const o=G(t),{externalSources:a}=e.metadata,r=Os(a,t);if(!r)throw new gs;const n=P(F.uploadConvertibleSource,s==null?void 0:s.onProgress,"uploadConvertibleSource"),i=await z(r,t,{onProgress:n.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:i,original:!0}]);const c=r.reduce((l,{asset:f})=>f instanceof File?l+f.size:l,0),p=n.simulate("serviceAssetsToGlb",xs(c));try{return{source:await Ws(i,t,o)}}finally{p.remove()}}async function qs(e,t,s){const o=P(F.uploadLocalMesh,s==null?void 0:s.onProgress,"uploadLocalMesh"),a=Cs(e,t,{...s,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await H([a],t,{...s,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}async function Cs(e,t,s){const o=G(t),a=await e.load(s),r=await a.toBinaryGLTF({ignoreLocalTransform:!0});u(s);const n=await r.buffer();return u(s),{blob:new Blob([n.data],{type:n.type}),assetName:`${as()}.glb`,assetType:o}}function Os(e,t){for(const s of e){const o=L(s.source,t);if(o)return o}return null}function L(e,t){if(!e)return null;const{infoFor3D:{supportedFormats:s,editFormats:o}}=t,a=ms(e),r=new Array;let n=!1;for(let i=0;i<a.length;++i){const c=Rs(a[i],s);if(!c)return null;o.includes(c.assetType)&&(n=!0),r.push(c)}return n?r:null}function Rs(e,t){const s=ds(e,t);return s?{asset:e,assetType:s}:null}async function z(e,t,s){return H(e.map(o=>Ls(o,s)),t,s)}async function H(e,t,s){const o=P(F.uploadAssetBlobs,s==null?void 0:s.onProgress,"uploadAssetBlobs"),a=await Hs(e,t,{...s,onProgress:o.makeOnProgress("prepareAssetItems")});u(s);const r=a.map(({item:i})=>i),{uploadResults:n}=await Gs(r,t,{...s,onProgress:o.makeOnProgress("uploadAssetItems")});return u(s),e.map((i,c)=>Js(a[c],n[c],t))}async function Ls(e,t){const{asset:s,assetType:o}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:o};const a=await s.toBlob(t);return u(t),{blob:a,assetName:s.assetName,assetType:o}}async function zs(e,t,s){const{blob:o,assetType:a,assetName:r}=e;let n=null;try{const i=await Is({data:o,name:r},t.url,s);u(s),n={assetType:a,assetUploadId:i.itemID}}catch(i){cs(i),Xs().warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!n){const i=await ls(o);if(u(s),!i.isBase64)throw new ws;n={assetType:a,assetData:i.data}}if(!n)throw new ys;return{item:n,assetName:r}}function Hs(e,t,s){const o=P(e.length,s==null?void 0:s.onProgress,"prepareAssetItems");return Promise.all(e.map(async(a,r)=>{const n=zs(await a,t,{...s,onProgress:o.makeOnProgress(r)});return u(s),n}))}async function Gs(e,t,s){const o=C(s==null?void 0:s.onProgress);try{const a=await m(h(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if(u(s),a.data.uploadResults.length!==e.length)throw new Ps(e.length,a.data.uploadResults.length);return a.data}finally{o.remove()}}function Js(e,t,s){const{success:o}=t;if(!o){const{error:p}=t;throw new bs(e.assetName,p)}const{assetHash:a}=t,{assetName:r,item:{assetType:n}}=e,{infoFor3D:{supportedFormats:i}}=s,c=rs(n,i);if(!c)throw new q(n);return new k(r,c,[new B(`${s.parsedUrl.path}/assets/${a}`,a)])}async function Ws(e,t,s){var p;const o=e.map(({assetName:l,parts:f})=>({assetName:l,assetHash:f[0].partHash})),a=(p=t.capabilities)==null?void 0:p.operations.supportsAsyncConvert3D,r={f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:s,async:a},n=h(t.parsedUrl.path,"convert3D");let i;try{i=(await(a?Qs:Ks)(n,{query:r,responseType:"json",timeout:0})).data}catch{throw new Ts}const{supportedFormats:c}=t.infoFor3D;return i.assets.map(l=>{const f=U(l.contentType,c);if(!f)throw new q(f);return new k(l.assetName,l.contentType,[new B(l.assetURL,l.assetHash)])})}function Ks(e,t){return m(e,t)}async function Qs(e,t){const s=(await m(e,t)).data.statusUrl;for(;;){const o=(await m(s,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return m(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await ns(Ys)}}function Vs(e){return!!e.infoFor3D&&!!e.url}function G(e){const{infoFor3D:t}=e,s=U("model/gltf-binary",t.supportedFormats)??is("glb",t.supportedFormats);if(!s)throw new hs;return s}function Xs(){return us.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const Ys=v(1e3);export{fe as uploadAssets};
