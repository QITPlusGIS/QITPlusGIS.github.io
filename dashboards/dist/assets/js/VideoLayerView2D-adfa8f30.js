import{aD as g,aI as d,t,v as r,w as f,fB as b,E as h,D as c,x as p,P as y}from"./index-709d080c.js";import{h as T}from"./GraphicsLayer-43a34dc5.js";import{m as _,u as v}from"./LayerView-6553e034.js";import{i as O}from"./GraphicContainer-6345e8d8.js";import{r as C}from"./GraphicsView2D-94092b25.js";import"./scaleUtils-139fb2fb.js";import"./Container-a559bf1c.js";import"./Texture-10a5939e.js";import"./color-906689d6.js";import"./BaseGraphicContainer-dc6c6339.js";import"./FeatureContainer-6bd1f2a0.js";import"./AttributeStoreView-e38d3215.js";import"./TiledDisplayObject-ae6319e7.js";import"./WGLContainer-1a8b1ee3.js";import"./FramebufferObject-3b96e2fc.js";import"./ProgramTemplate-1082d575.js";import"./GeometryUtils-58fd4c09.js";import"./config-1337d16e.js";import"./earcut-542fe939.js";import"./visualVariablesUtils-3c4fa38c.js";import"./ExpandedCIM-ef671ba0.js";import"./BidiEngine-9a40f2f4.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-0cd11aba.js";import"./floatRGBA-028de362.js";import"./util-de83a503.js";import"./TileContainer-c80bebf8.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-6a6170eb.js";import"./projectionSupport-1063052c.js";import"./json-48e3ea08.js";import"./Matcher-b851c754.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-845960ce.js";import"./ComputedAttributeStorage-b467c3de.js";import"./TimeOnly-94cbed0e.js";let a=class extends g(d){constructor(e){super(e),this.frameCenter=null,this.frameOutline=null,this.lineOfSight=null,this.sensorLocation=null,this.sensorTrail=null}};t([r({type:Boolean})],a.prototype,"frameCenter",void 0),t([r({type:Boolean})],a.prototype,"frameOutline",void 0),t([r({type:Boolean})],a.prototype,"lineOfSight",void 0),t([r({type:Boolean})],a.prototype,"sensorLocation",void 0),t([r({type:Boolean})],a.prototype,"sensorTrail",void 0),a=t([f("esri.layers.support.TelemetryDisplay")],a);const u=a,m=new b([255,127,0]);let n=class extends _(v){constructor(){super(...arguments),this._graphicsLayer=new T,this._frameOutlineGraphic=new h({symbol:{type:"simple-fill",outline:{type:"simple-line",color:m}}}),this._sensorTrailGraphic=new h({symbol:{type:"simple-line",color:m}}),this._lineOfSightGraphic=new h({symbol:{type:"simple-line",color:m}}),this._sensorLocationGraphic=new h({symbol:{type:"simple-marker",color:m}}),this._frameCenterGraphic=new h({symbol:{type:"simple-marker",color:m}}),this.layer=null,this.symbolColor=m,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=c(this._graphicsLayer)}initialize(){var e,i,s,l,o;this.addHandles(p(()=>this.symbolColor,()=>{this._frameOutlineGraphic.symbol.outline.color=this.symbolColor,this._sensorTrailGraphic.symbol.color=this.symbolColor,this._lineOfSightGraphic.symbol.color=this.symbolColor,this._sensorLocationGraphic.symbol.color=this.symbolColor,this._frameCenterGraphic.symbol.color=this.symbolColor},y)),this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic]),this.visibleTelemetryElements=new u({frameCenter:((e=this.layer.telemetryDisplay)==null?void 0:e.frameCenter)??!0,frameOutline:((i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline)??!0,lineOfSight:((s=this.layer.telemetryDisplay)==null?void 0:s.lineOfSight)??!0,sensorLocation:((l=this.layer.telemetryDisplay)==null?void 0:l.sensorLocation)??!0,sensorTrail:((o=this.layer.telemetryDisplay)==null?void 0:o.sensorTrail)??!0})}attach(){this.graphicsView=new C({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new O(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([p(()=>{var e,i,s,l,o;return[(e=this.layer.telemetryDisplay)==null?void 0:e.frameCenter,(i=this.layer.telemetryDisplay)==null?void 0:i.frameOutline,(s=this.layer.telemetryDisplay)==null?void 0:s.sensorLocation,(l=this.layer.telemetryDisplay)==null?void 0:l.sensorTrail,(o=this.layer.telemetryDisplay)==null?void 0:o.lineOfSight]},()=>this._updateVisibleTelemetryElements(),y),p(()=>{var e,i,s,l,o;return[this.layer.telemetry,(e=this.visibleTelemetryElements)==null?void 0:e.frameCenter,(i=this.visibleTelemetryElements)==null?void 0:i.frameOutline,(s=this.visibleTelemetryElements)==null?void 0:s.sensorLocation,(l=this.visibleTelemetryElements)==null?void 0:l.sensorTrail,(o=this.visibleTelemetryElements)==null?void 0:o.lineOfSight]},()=>this._updateGraphicGeometries(),y)])}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}supportsSpatialReference(e){return!0}moveStart(){}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(e){this.graphicsView.processUpdate(e)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:e}=this.layer,{visibleTelemetryElements:i}=this;e&&i&&(i.frameOutline&&e.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,i.sensorTrail&&e.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,i.lineOfSight&&e.lineOfSight?this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight:this._lineOfSightGraphic.geometry=null,i.sensorLocation&&e.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,i.frameCenter&&e.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}};t([r()],n.prototype,"graphicsView",void 0),t([r()],n.prototype,"layer",void 0),t([r()],n.prototype,"symbolColor",void 0),t([r({type:u})],n.prototype,"visibleTelemetryElements",void 0),n=t([f("esri.views.2d.layers.VideoLayerView2D")],n);const oe=n;export{oe as default};
