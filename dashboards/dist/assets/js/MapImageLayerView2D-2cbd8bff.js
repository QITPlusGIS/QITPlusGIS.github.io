import{a as e,y as o,c as h,b as g,s as l,f as d}from"./uuid-11f8a774.js";import{i as u}from"./GraphicsCollection-4a6a6bbf.js";import{a as c}from"./BitmapContainer-af077718.js";import{m as y,u as f}from"./LayerView-5b88715e.js";import{r as x}from"./GraphicsView2D-ffc945d4.js";import{a as w}from"./HighlightGraphicContainer-40faa2e1.js";import{v as _}from"./ExportStrategy-015f2f13.js";import{j as v}from"./commonProperties-f89d14c0.js";import{m as H}from"./ExportImageParameters-a80fbb14.js";import{a as I}from"./RefreshableLayerView-3d9d158a.js";import{G as V,r as P}from"./drapedUtils-008cab95.js";import"./index-9591f551.js";import"./WGLContainer-c9b60762.js";import"./definitions-8354b929.js";import"./FramebufferObject-276d0d17.js";import"./Texture-2cfb434c.js";import"./capabilities-c523e723.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-112d69b6.js";import"./commonjsHelpers-2f3e7994.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-32a3c8c6.js";import"./enums-f1a6a48a.js";import"./GeometryUtils-9172a54e.js";import"./heatmapUtils-f451477b.js";import"./vec4f64-3c9d0901.js";import"./mat3f32-6c416b1c.js";import"./StyleDefinition-29c49b98.js";import"./vec2f32-eaf29605.js";import"./config-1337d16e.js";import"./Container-c1db96c2.js";import"./parser-e8657b5e.js";import"./mat4f32-60a2394b.js";import"./mat4-a716043f.js";import"./earcut-b84353bc.js";import"./vec2-178908bd.js";import"./vec2f64-95bf678d.js";import"./featureConversionUtils-7017a7c2.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-3367fb97.js";import"./map-beb54af9.js";import"./Basemap-e835b2ff.js";import"./loadAll-ed668eae.js";import"./PortalItem-6e04dd29.js";import"./writeUtils-08445a52.js";import"./layerUtils-c5e7bd79.js";import"./compilerUtils-4589e991.js";import"./CollectionFlattener-3b7ee789.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-1bb3cee3.js";import"./TablesMixin-abbae55c.js";import"./arcgisLayerUrl-f89b3daf.js";import"./Cyclical-3ead80f1.js";import"./workers-194c6572.js";import"./TileInfo-0752eafb.js";import"./jsxFactory-3225406e.js";import"./UpdatingHandles-453b6cae.js";import"./signal-9889a3e2.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-f849f6ea.js";import"./TileStore-488f52a1.js";import"./quickselect-149a6b43.js";import"./QuantizationParameters-047a8fb0.js";import"./TileInfoView-3c33d57f.js";import"./normalizeUtils-b40b80d9.js";import"./normalizeUtilsCommon-44f2a7f8.js";import"./mat3-03bcfe6d.js";import"./GoTo-576c62ef.js";import"./ExpandedCIM-591d00a6.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-1775d26c.js";import"./GeometryUtils-984e8446.js";import"./utils-5680966d.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-03ec5df7.js";import"./floatRGBA-675f6b2f.js";import"./normalizeUtilsSync-ace05f0c.js";import"./projectionSupport-f9cfd22c.js";import"./json-48e3ea08.js";import"./LabelClass-e2fd4294.js";import"./labelUtils-64d01ef0.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-e8038208.js";import"./AttributeStoreView-43a7d5d5.js";import"./TiledDisplayObject-f5b89487.js";import"./diffUtils-0fe85298.js";import"./labelingInfo-efefa770.js";import"./clusterUtils-34ff746f.js";import"./MD5-715f37cd.js";import"./SizeVariable-45541787.js";import"./colorRamps-1b6e24dc.js";import"./LegendOptions-204a2dae.js";import"./lengthUtils-782f0f7c.js";import"./util-a938c846.js";import"./Matcher-d2c49178.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-eb1bedf9.js";import"./LRUCache-7a50638a.js";import"./ComputedAttributeStorage-083b8a1d.js";import"./FieldsIndex-c32201a6.js";import"./TimeOnly-b98745da.js";import"./BaseGraphicContainer-0f8a82a4.js";import"./FeatureContainer-c08ab301.js";import"./TileContainer-5567e24f.js";import"./vec3f32-2da9db36.js";import"./Bitmap-7421f3d6.js";import"./ElevationInfo-799a9463.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-e9dff2a3.js";import"./popupUtils-9368255f.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return e([o()],i.prototype,"exportImageParameters",void 0),e([o({readOnly:!0})],i.prototype,"floors",null),e([o({readOnly:!0})],i.prototype,"exportImageVersion",null),e([o()],i.prototype,"layer",void 0),e([o()],i.prototype,"suspended",void 0),e([o(v)],i.prototype,"timeExtent",void 0),i=e([h("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new u,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{g(r)||l.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,p=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,s)=>P(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(d(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,p){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,r,p){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};e([o()],m.prototype,"strategy",void 0),e([o()],m.prototype,"updating",void 0),m=e([h("esri.views.2d.layers.MapImageLayerView2D")],m);const Si=m;export{Si as default};
