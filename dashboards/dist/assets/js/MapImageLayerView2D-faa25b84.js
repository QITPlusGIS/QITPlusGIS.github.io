import{t as r,v as a,bv as g,w as m,b as l,m as d,q as u,x as c}from"./index-7211d811.js";import{a as y}from"./BitmapContainer-aa752b7c.js";import{m as f,u as x}from"./LayerView-6f653f91.js";import{r as w}from"./GraphicsView2D-e56403cb.js";import{a as v}from"./HighlightGraphicContainer-34657d64.js";import{v as _}from"./ExportStrategy-b257b613.js";import{m as H}from"./ExportImageParameters-e7677a7d.js";import{a as I}from"./RefreshableLayerView-f2a6e711.js";import{G as V,r as b}from"./drapedUtils-28effaf8.js";import"./WGLContainer-a1237a72.js";import"./FramebufferObject-8e2c7ff7.js";import"./Texture-8977e2c7.js";import"./ProgramTemplate-d525368d.js";import"./color-59c4e3eb.js";import"./GeometryUtils-40aada46.js";import"./config-1337d16e.js";import"./Container-d43c5e18.js";import"./earcut-fa517ba8.js";import"./featureConversionUtils-7dacf99d.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-6f53eafc.js";import"./ExpandedCIM-8f4619ac.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-60e1228c.js";import"./utils-859f11ff.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-d7291828.js";import"./floatRGBA-d7257b49.js";import"./normalizeUtilsSync-54a1e768.js";import"./projectionSupport-26da4a4e.js";import"./json-48e3ea08.js";import"./AttributeStoreView-c1b5df35.js";import"./TiledDisplayObject-e3310e87.js";import"./util-66772d31.js";import"./Matcher-3eec7674.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-6a95ed40.js";import"./ComputedAttributeStorage-dbd00f5a.js";import"./TimeOnly-52b98de5.js";import"./BaseGraphicContainer-dd4c9642.js";import"./FeatureContainer-a119acd6.js";import"./TileContainer-4b2862fb.js";import"./vec3f32-2da9db36.js";import"./Bitmap-cccf6b1c.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-66e320cd.js";import"./popupUtils-dca4fb1f.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var i;return((i=this.view)==null?void 0:i.floors)??null}get exportImageVersion(){var i;return(i=this.exportImageParameters)==null||i.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return r([a()],e.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],e.prototype,"floors",null),r([a({readOnly:!0})],e.prototype,"exportImageVersion",null),r([a()],e.prototype,"layer",void 0),r([a()],e.prototype,"suspended",void 0),r([a(g)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let o=class extends P(I(f(x))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||u.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,s=i>=10.3,n=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(p,h)=>b(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:s,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,s){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}fetchImageBitmap(t,e,i,s){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...s})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([a()],o.prototype,"strategy",void 0),r([a()],o.prototype,"updating",void 0),o=r([m("esri.views.2d.layers.MapImageLayerView2D")],o);const _t=o;export{_t as default};
