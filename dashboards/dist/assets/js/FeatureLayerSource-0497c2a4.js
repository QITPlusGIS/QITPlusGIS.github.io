import{_ as D}from"./index-2eca610e.js";import{eM as C,eN as V,s as $,o as I,g as G,a7 as z,Q as L,a as _,y as T,m as H,dm as W,a4 as U,A as h,h as N,S as X,bt as P,eO as Y,ai as Z,X as B,ct as K,N as tt,c as et,z as at}from"./uuid-854440a9.js";import{F as st,b as rt,c as it,w as ot}from"./arcgisLayerUrl-db50ff50.js";import{q as nt}from"./mat4-8067289c.js";import{e as ut}from"./mat4f64-1413b4a7.js";import{m as lt}from"./MeshGeoreferencedRelativeVertexSpace-e8f55994.js";import{r as ct}from"./vec32-f66df3e3.js";import{v as dt}from"./External-63b8b742.js";import{isFeatureIdentifierArrayWithGlobalId as pt,isFeatureIdentifierArrayWithObjectId as mt}from"./editingSupport-66476731.js";import{o as ht}from"./clientSideDefaults-108f5794.js";import{x as yt}from"./QueryTask-2af9c0d9.js";import{Q as x}from"./featureLayerUtils-ac109221.js";import{F as ft}from"./infoFor3D-24efd44a.js";import{s as gt}from"./executeQueryJSON-6454ac46.js";import{i as bt}from"./FeatureLayer-96d0b946.js";import{b as wt}from"./Query-84dc14af.js";import{s as Rt,a as St,r as qt}from"./EditBusLayer-b9fb1a02.js";import"./normalizeUtils-c97c170d.js";import"./normalizeUtilsCommon-092672b3.js";import"./layerUtils-53516847.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./defaultsJSON-b087dd4d.js";import"./executeForIds-e61ff9b4.js";import"./query-cc8eab36.js";import"./pbfQueryUtils-1dbdf596.js";import"./pbf-c0a7419b.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-fb4b06e9.js";import"./executeQueryPBF-9cef2091.js";import"./featureConversionUtils-fdf2c775.js";import"./FeatureSet-5c3606d3.js";import"./Field-3600efd2.js";import"./fieldType-67bcc5fb.js";import"./jsonUtils-6ee7893f.js";import"./UniqueValueRenderer-e361d3ea.js";import"./LegendOptions-82a1d9d3.js";import"./diffUtils-2fda0782.js";import"./SizeVariable-bf59d78c.js";import"./colorRamps-2b21b939.js";import"./compilerUtils-29e4db8f.js";import"./lengthUtils-b6ebb268.js";import"./ColorStop-1ffa7beb.js";import"./jsonUtils-1956249c.js";import"./styleUtils-327fee5c.js";import"./DictionaryLoader-85e01f74.js";import"./LRUCache-f623b6a8.js";import"./FieldsIndex-babfd5a5.js";import"./heatmapUtils-2658140c.js";import"./vec4f64-3c9d0901.js";import"./AttachmentQuery-b68a2dcf.js";import"./RelationshipQuery-208eeb77.js";import"./FullTextSearch-a21aa00d.js";import"./QuantizationParameters-0cb320a2.js";import"./MultiOriginJSONSupport-445fe484.js";import"./commonProperties-c4c17d77.js";import"./ElevationInfo-cefb6d5f.js";import"./FeatureLayerBase-f4864ff1.js";import"./LayerFloorInfo-a572a948.js";import"./serviceCapabilitiesUtils-15e9a7c8.js";import"./workers-bc069650.js";import"./APIKeyMixin-e23ff08a.js";import"./ArcGISService-f80e29bd.js";import"./BlendLayer-4792ed1b.js";import"./jsonUtils-d5cf6074.js";import"./parser-575e2c11.js";import"./mat4f32-60a2394b.js";import"./CustomParametersMixin-37d84f95.js";import"./FeatureEffectLayer-7090e797.js";import"./FeatureEffect-32f3776e.js";import"./FeatureReductionLayer-4195f6bd.js";import"./clusterUtils-3da19a70.js";import"./MD5-715f37cd.js";import"./FeatureReductionSelection-b1bc3746.js";import"./LabelClass-360f8a0a.js";import"./labelUtils-38642a07.js";import"./OperationalLayer-be20f063.js";import"./OrderedLayer-a83a0e12.js";import"./PortalLayer-e811fd24.js";import"./PortalItem-eaf53090.js";import"./portalItemUtils-1fa1f793.js";import"./RefreshableLayer-74121b98.js";import"./ScaleRangeLayer-8c96f5fe.js";import"./TemporalLayer-0a93fd07.js";import"./FeatureTemplate-2ae2449f.js";import"./FeatureType-fbeaf9b0.js";import"./fieldProperties-2a1cbbd1.js";import"./labelingInfo-f046f80c.js";import"./versionUtils-feede695.js";import"./styleUtils-350617f8.js";import"./TopFeaturesQuery-8bb51543.js";import"./popupUtils-1833ba4a.js";import"./interfaces-f1f22245.js";function At(t){const{vertexSpace:e}=t;if(e.isRelative)return t.clone();const{anchor:a}=t,s=a.clone(),r=nt(Ft,[-s.x,-s.y,-s.z]),i=new lt({origin:[s.x,s.y,s.z]}),o=t.cloneWithVertexSpace(i),{position:n}=o.vertexAttributes;return o.vertexAttributes.position=ct(new Float64Array(n.length),n,r),o.vertexAttributesChanged(),o}const Ft=ut();async function Q(t,e,a){const{geometry:s}=e,r={...e.attributes};if(a!=null&&(s==null?void 0:s.type)==="mesh"){const{transformFieldRoles:i}=a,{origin:o,spatialReference:n,transform:u}=s,l=t.spatialReference;await st(n,l);const d=rt(o,l);if(r[i.originX]=d.x,r[i.originY]=d.y,r[i.originZ]=d.z??0,u!=null){const{translation:p,scale:m,rotation:y}=u,{vertexSpace:R}=s,c=R.isGeoreferenced?1:C(n)/C(l);r[i.translationX]=p[0]*c,r[i.translationY]=p[2]*c,r[i.translationZ]=-p[1]*c,r[i.scaleX]=m[0],r[i.scaleY]=m[2],r[i.scaleZ]=m[1],r[i.rotationX]=y[0],r[i.rotationY]=y[2],r[i.rotationZ]=-y[1],r[i.rotationDeg]=y[3]}return{attributes:r}}return s==null?{attributes:r}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:r}}async function It(t,e){const a=await Promise.all((e.addAttachments??[]).map(i=>j(t,i))),s=await Promise.all((e.updateAttachments??[]).map(i=>j(t,i))),r=e.deleteAttachments??[];return a.length||s.length||r.length?{adds:a,updates:s,deletes:[...r]}:null}async function j(t,e){var d;const{feature:a,attachment:s}=e,{globalId:r,name:i,contentType:o,data:n,uploadId:u}=s,l={globalId:r};if(a&&("attributes"in a?l.parentGlobalId=(d=a.attributes)==null?void 0:d[t.globalIdField]:a.globalId&&(l.parentGlobalId=a.globalId)),u)l.uploadId=u;else if(n){const p=await V(n);p&&(l.contentType=p.mediaType,l.data=p.data),n instanceof File&&(l.name=n.name)}return i&&(l.name=i),o&&(l.contentType=o),l}function Ot(t,e,a){if(!e||e.length===0)return[];if(a&&pt(e))return e.map(r=>r.globalId);if(mt(e))return e.map(r=>r.objectId);const s=a?t.globalIdField:t.objectIdField;return s?e.map(r=>r.getAttribute(s)):[]}function Et(t){var r,i,o;const e=t==null?void 0:t.assetMaps;if(e){for(const n of e.addResults)n.success||$.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${n.globalId}.`);for(const n of e.updateResults)n.success||$.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${n.globalId}.`)}const a=t==null?void 0:t.attachments,s={addFeatureResults:((r=t==null?void 0:t.addResults)==null?void 0:r.map(w))??[],updateFeatureResults:((i=t==null?void 0:t.updateResults)==null?void 0:i.map(w))??[],deleteFeatureResults:((o=t==null?void 0:t.deleteResults)==null?void 0:o.map(w))??[],addAttachmentResults:a!=null&&a.addResults?a.addResults.map(w):[],updateAttachmentResults:a!=null&&a.updateResults?a.updateResults.map(w):[],deleteAttachmentResults:a!=null&&a.deleteResults?a.deleteResults.map(w):[]};return t!=null&&t.editMoment&&(s.editMoment=t.editMoment),s}function w(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new I("feature-layer-source:edit-failure",e.description,{code:e.code}):null}}function v(t,e){return new G({attributes:t.attributes,geometry:z({...t.geometry,spatialReference:e})})}function _t(t,e){var a,s,r;return{adds:((a=t==null?void 0:t.adds)==null?void 0:a.map(i=>v(i,e)))||[],updates:((s=t==null?void 0:t.updates)==null?void 0:s.map(i=>({original:v(i[0],e),current:v(i[1],e)})))||[],deletes:((r=t==null?void 0:t.deletes)==null?void 0:r.map(i=>v(i,e)))||[],spatialReference:e}}function xt(t){const e=t.details.raw,a=+e.code,s=+e.extendedCode;return a===500&&(s===-2147217144||s===-2147467261)}const vt=new L({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),$t=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),Tt=new L({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let A=class extends H{constructor(){super(...arguments),this.type="feature-layer",this.refresh=W(async()=>{var a,s;await this.load();const t=(a=this.sourceJSON.editingInfo)==null?void 0:a.lastEditDate;if(t==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const e=t!==((s=this.sourceJSON.editingInfo)==null?void 0:s.lastEditDate);return{dataChanged:e,updates:e?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(t){const e=this.layer.sourceJSON,a=this._fetchService(e,{...t}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,t)).then(()=>this._ensureLatestMetadata(t));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){var l;const{capabilities:t,parsedUrl:e,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:i,fieldsIndex:o}=this.layer,n=U("featurelayer-pbf")&&(t==null?void 0:t.query.supportsFormatPBF)&&s==null,u=((l=t==null?void 0:t.operations)==null?void 0:l.supportsQueryAttachments)??!1;return new yt({url:e.path,pbfSupported:n,fieldsIndex:o,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:i,queryAttachmentsSupported:u})}async addAttachment(t,e){await this.load();const{layer:a}=this;await x(a,"editing");const s=t.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",i=this._getLayerRequestOptions(),o=this._getFormDataForAttachment(e,i.query);try{const n=await h(r,{body:o});return w(n.data.addAttachmentResult)}catch(n){throw this._createAttachmentErrorResult(s,n)}}async updateAttachment(t,e,a){await this.load();const{layer:s}=this;await x(s,"editing");const r=t.attributes[s.objectIdField],i=s.parsedUrl.path+"/"+r+"/updateAttachment",o=this._getLayerRequestOptions({query:{attachmentId:e}}),n=this._getFormDataForAttachment(a,o.query);try{const u=await h(i,{body:n});return w(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(r,u)}}async applyEdits(t,e){var g,q,E,M,J,k;await this.load();const{layer:a}=this;await x(a,"editing");const s=a.infoFor3D,r=s!=null,i=r||((e==null?void 0:e.globalIdUsed)??!1),o=r?await this._uploadMeshesAndGetAssetMapEditsJSON(t):null,n=((g=t.addFeatures)==null?void 0:g.map(b=>Q(this.layer,b,s)))??[],u=(await Promise.all(n)).filter(N),l=((q=t.updateFeatures)==null?void 0:q.map(b=>Q(this.layer,b,s)))??[],d=(await Promise.all(l)).filter(N),p=Ot(this.layer,t.deleteFeatures,i);bt(u,d,a.spatialReference);const m=await It(this.layer,t),y=a.capabilities.editing.supportsAsyncApplyEdits&&r,R=(e==null?void 0:e.gdbVersion)||a.gdbVersion,c={gdbVersion:R,rollbackOnFailure:e==null?void 0:e.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:e==null?void 0:e.returnEditMoment,usePreviousEditMoment:e==null?void 0:e.usePreviousEditMoment,async:y};await Rt(this.layer.url,R,!0);const O=St(this.layer.url,R||null);e!=null&&e.returnServiceEditsOption?(c.edits=JSON.stringify([{id:a.layerId,adds:u,updates:d,deletes:p,attachments:m,assetMaps:o}]),c.returnServiceEditsOption=vt.toJSON(e==null?void 0:e.returnServiceEditsOption),c.returnServiceEditsInSourceSR=e==null?void 0:e.returnServiceEditsInSourceSR):(c.adds=u.length?JSON.stringify(u):null,c.updates=d.length?JSON.stringify(d):null,c.deletes=p.length?i?JSON.stringify(p):p.join(","):null,c.attachments=m&&JSON.stringify(m),c.assetMaps=o!=null?JSON.stringify(o):void 0);const f=this._getLayerRequestOptions({method:"post",query:c});O&&(f.authMode="immediate",f.query.returnEditMoment=!0,f.query.sessionId=qt);const S=e!=null&&e.returnServiceEditsOption?a.url:a.parsedUrl.path;let F;try{F=y?await this._asyncApplyEdits(S+"/applyEdits",f):await h(S+"/applyEdits",f)}catch(b){if(!xt(b))throw b;f.authMode="immediate",F=y?await this._asyncApplyEdits(S+"/applyEdits",f):await h(S+"/applyEdits",f)}if(!((E=a.capabilities.operations)!=null&&E.supportsEditing)&&((J=(M=a.effectiveCapabilities)==null?void 0:M.operations)!=null&&J.supportsEditing)){const b=(k=at)==null?void 0:k.findCredential(a.url);await(b==null?void 0:b.refreshToken())}return this._createEditsResult(F)}async deleteAttachments(t,e){await this.load();const{layer:a}=this;await x(a,"editing");const s=t.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await h(r,this._getLayerRequestOptions({query:{attachmentIds:e.join(",")},method:"post"}))).data.deleteAttachmentResults.map(w)}catch(i){throw this._createAttachmentErrorResult(s,i)}}fetchRecomputedExtents(t={}){const e=t.signal;return this.load({signal:e}).then(async()=>{const a=this._getLayerRequestOptions({...t,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:i}=await h(`${r}/${s}`,a),{id:o,extent:n,fullExtent:u,timeExtent:l}=i,d=n||u;return{id:o,fullExtent:d&&X.fromJSON(d),timeExtent:l&&it.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(t,e={}){await this.load();const a=this._getLayerRequestOptions(e);return this.queryTask.executeAttachmentQuery(t,a)}async queryFeatures(t,e){var s;await this.load();const a=await this.queryTask.execute(t,{...e,query:this._createRequestQueryOptions(e)});return(s=t.outStatistics)!=null&&s.length&&a.features.length&&a.features.forEach(r=>{var o;const i=r.attributes;(o=t.outStatistics)==null||o.forEach(({outStatisticFieldName:n})=>{if(n){const u=n.toLowerCase();u&&u in i&&n!==u&&(i[n]=i[u],delete i[u])}})}),a}async queryFeaturesJSON(t,e){return await this.load(),this.queryTask.executeJSON(t,{...e,query:this._createRequestQueryOptions(e)})}async queryObjectIds(t,e){return await this.load(),this.queryTask.executeForIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryFeatureCount(t,e){return await this.load(),this.queryTask.executeForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryExtent(t,e){return await this.load(),this.queryTask.executeForExtent(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeatures(t,e){return await this.load(),this.queryTask.executeRelationshipQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryRelatedFeaturesCount(t,e){return await this.load(),this.queryTask.executeRelationshipQueryForCount(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopFeatures(t,e){return await this.load(),this.queryTask.executeTopFeaturesQuery(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopObjectIds(t,e){return await this.load(),this.queryTask.executeForTopIds(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopExtents(t,e){return await this.load(),this.queryTask.executeForTopExtents(t,{...e,query:this._createRequestQueryOptions(e)})}async queryTopCount(t,e){return await this.load(),this.queryTask.executeForTopCount(t,{...e,query:this._createRequestQueryOptions(e)})}async fetchPublishingStatus(){if(!ot(this.layer.url))return"unavailable";const t=P(this.layer.url,"status"),e=await h(t,{query:{f:"json"}});return Tt.fromJSON(e.data.status)}async uploadAssets(t,e){const{uploadAssets:a}=await D(()=>import("./uploadAssets-3f48d878.js"),["./uploadAssets-3f48d878.js","./uuid-854440a9.js","./index-2eca610e.js","./External-63b8b742.js","./infoFor3D-24efd44a.js","./arcgisLayerUrl-db50ff50.js"],import.meta.url);return a(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},e)}async _asyncApplyEdits(t,e){const a=(await h(t,e)).data.statusUrl;for(;;){const s=(await h(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return h(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new I("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new I("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await Y(Nt)}}_createRequestQueryOptions(t){const e={...this.layer.customParameters,token:this.layer.apiKey,...t==null?void 0:t.query};return this.layer.datesInUnknownTimezone&&(e.timeReferenceUnknownClient=!0),e}async _fetchService(t,e){if(!t){const s={};U("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),e!=null&&e.cacheBust&&(s._ts=Date.now());const{data:r}=await h(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:e==null?void 0:e.signal}));t=r}this.sourceJSON=await this._patchServiceJSON(t,e==null?void 0:e.signal);const a=t.type;if(!$t.has(a))throw new I("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(t,e){var a;if(t.type!=="Table"&&t.geometryType&&!((a=t==null?void 0:t.drawingInfo)!=null&&a.renderer)&&!t.defaultSymbol){const s=ht(t.geometryType).renderer;Z("drawingInfo.renderer",s,t)}if(t.geometryType==="esriGeometryMultiPatch"&&t.infoFor3D&&(t.geometryType="mesh"),t.extent==null)try{const{data:s}=await h(this.layer.url,this._getLayerRequestOptions({signal:e}));s.spatialReference&&(t.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:s.spatialReference})}catch(s){B(s)}return t}async _ensureLatestMetadata(t){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...t,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(t){const{addAssetFeatures:e}=t;if(!(e!=null&&e.length))return null;const a=await this._filterRedundantAssetMaps(e);if(!(e!=null&&e.length))return null;const s=new Array,r=new Map;for(const i of a){const{geometry:o}=i,{vertexSpace:n}=o;if(n.isRelative)s.push(o);else{const u=At(o);r.set(u,o),i.geometry=u,s.push(u)}}await this.uploadAssets(s);for(const[i,o]of r)o.addExternalSources(i.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(t){const e=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of t){const i=r.geometry,{metadata:o}=i,n=o.getExternalSourcesOnService(s),u=r.getAttribute(a);if(n.length===0){$.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:l}=n.find(dt)??n[0],{vertexSpace:d}=i,p=d.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const m of l)m.parts.length===1?e.push({globalId:K(),parentGlobalId:u,assetName:m.assetName,assetHash:m.parts[0].partHash,flags:p}):$.getLogger(this).error(`Skipping asset ${m.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return e}_createEditsResult(t){const e=t.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(e))for(const o of e)s.push({id:o.id,editedFeatures:o.editedFeatures}),o.id===a&&(r={addResults:o.addResults??[],updateResults:o.updateResults??[],deleteResults:o.deleteResults??[],attachments:o.attachments,editMoment:o.editMoment});else r=e;const i=Et(r);if(s.length>0){i.editedFeatureResults=[];for(const o of s){const{editedFeatures:n}=o,u=n!=null&&n.spatialReference?new tt(n.spatialReference):null;i.editedFeatureResults.push({layerId:o.id,editedFeatures:_t(n,u)})}}return i}_createAttachmentErrorResult(t,e){var r;const a=((r=e.details.messages)==null?void 0:r[0])||e.message,s=e.details.httpStatus||e.details.messageCode;return{objectId:t,globalId:null,error:new I("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(t,e){const a=t instanceof FormData?t:t&&t.elements?new FormData(t):null;if(a)for(const s in e){const r=e[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(t={}){const{parsedUrl:e,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...t,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...e.query,f:"json",...this._createRequestQueryOptions(t)},responseType:"json"}}async _filterRedundantAssetMaps(t){const{layer:e}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=e;if(s==null||a==null)return t;const i=ft(s);if(i==null)return t;const o=P(r.path,`../${i.id}`),n=new Array,u=new Array;for(const c of t)c.geometry.metadata.getExternalSourcesOnService(r).length>0?u.push(c):n.push(c);const l=u.map(c=>c.getAttribute(a)).filter(N);if(l.length===0)return t;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:p}}=s,m=new wt;m.where=`${d} IN (${l.map(c=>`'${c}'`)})`,m.outFields=[p,d],m.returnGeometry=!1;const y=await gt(o,m),{features:R}=y;return R.length===0?t:[...n,...u.filter(c=>{const O=c.getAttribute(a);if(!O)return!0;const{metadata:f}=c.geometry,S=R.filter(g=>g.getAttribute(d)===O);if(S.length===0)return!0;const F=S.map(g=>g.getAttribute(p));return f.getExternalSourcesOnService(r).flatMap(({source:g})=>g.flatMap(q=>q.parts.map(E=>E.partHash))).some(g=>F.every(q=>g!==q))})]}};_([T()],A.prototype,"type",void 0),_([T({constructOnly:!0})],A.prototype,"layer",void 0),_([T({readOnly:!0})],A.prototype,"queryTask",null),A=_([et("esri.layers.graphics.sources.FeatureLayerSource")],A);const Nt=1e3,wa=A;export{wa as default};
