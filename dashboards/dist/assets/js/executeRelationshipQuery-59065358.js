import{A as p,cX as y,aA as l}from"./uuid-11f8a774.js";import{t as j}from"./query-e08b3825.js";import{d as R}from"./FeatureSet-59d81965.js";import m from"./RelationshipQuery-86d00593.js";import"./index-9591f551.js";import"./normalizeUtils-b40b80d9.js";import"./normalizeUtilsCommon-44f2a7f8.js";import"./pbfQueryUtils-21711a29.js";import"./pbf-8e0dfe4d.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-a1939753.js";import"./arcgisLayerUrl-f89b3daf.js";import"./Field-1a3f84f2.js";import"./fieldType-322546e5.js";import"./Query-76befbe7.js";import"./FullTextSearch-9c3b6738.js";import"./QuantizationParameters-047a8fb0.js";function F(r,t){const e=r.toJSON();return e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e.outFields&&!(t!=null&&t.returnCountOnly)?e.outFields.includes("*")?e.outFields="*":e.outFields=e.outFields.join(","):delete e.outFields,e.outSR&&(e.outSR=y(e.outSR)),e.dynamicDataSource&&(e.layer=JSON.stringify({source:e.dynamicDataSource}),delete e.dynamicDataSource),e}async function b(r,t,e){const n=await f(r,t,e),o=n.data,s=o.geometryType,a=o.spatialReference,i={};for(const c of o.relatedRecordGroups){const d={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:a,hasZ:!!o.hasZ,hasM:!!o.hasM,features:c.relatedRecords};if(c.objectId!=null)i[c.objectId]=d;else for(const u of Object.keys(c))u!=="relatedRecords"&&(i[c[u]]=d)}return{...n,data:i}}async function h(r,t,e){const n=await f(r,t,e,{returnCountOnly:!0}),o=n.data,s={};for(const a of o.relatedRecordGroups)a.objectId!=null&&(s[a.objectId]=a.count);return{...n,data:s}}async function f(r,t,e={},n){const o=j({...r.query,f:"json",...n,...F(t,n)});return p(r.path+"/queryRelatedRecords",{...e,query:{...e.query,...o}})}async function M(r,t,e){t=m.from(t);const n=l(r);return b(n,t,e).then(o=>{const s=o.data,a={};return Object.keys(s).forEach(i=>a[i]=R.fromJSON(s[i])),a})}async function Q(r,t,e){t=m.from(t);const n=l(r);return h(n,t,{...e}).then(o=>o.data)}export{M as executeRelationshipQuery,Q as executeRelationshipQueryForCount};
