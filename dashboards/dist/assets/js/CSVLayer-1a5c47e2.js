import{a as i,y as r,c as m,m as v,dm as w,S,a4 as O,T as F,cN as b,d$ as I,N as q,X as N,a2 as _,o as h}from"./uuid-11f8a774.js";import{Z as J}from"./FeatureLayer-c0885f3b.js";import{p as C}from"./workers-194c6572.js";import{d as P}from"./FeatureSet-59d81965.js";import{l as j}from"./clientSideDefaults-842d3990.js";import{b as l}from"./Query-76befbe7.js";import"./index-9591f551.js";import"./UniqueValueRenderer-0326331a.js";import"./LegendOptions-204a2dae.js";import"./diffUtils-0fe85298.js";import"./SizeVariable-45541787.js";import"./colorRamps-1b6e24dc.js";import"./compilerUtils-4589e991.js";import"./lengthUtils-782f0f7c.js";import"./ColorStop-213c8cb4.js";import"./jsonUtils-e8038208.js";import"./layerUtils-c5e7bd79.js";import"./styleUtils-3725741d.js";import"./jsonUtils-9eefcfc7.js";import"./DictionaryLoader-5dbec708.js";import"./LRUCache-7a50638a.js";import"./FieldsIndex-c32201a6.js";import"./heatmapUtils-f451477b.js";import"./vec4f64-3c9d0901.js";import"./MultiOriginJSONSupport-f9b5e427.js";import"./commonProperties-f89d14c0.js";import"./arcgisLayerUrl-f89b3daf.js";import"./ElevationInfo-799a9463.js";import"./FeatureLayerBase-3df249b7.js";import"./Field-1a3f84f2.js";import"./fieldType-322546e5.js";import"./featureLayerUtils-6bc58f22.js";import"./AttachmentQuery-f66519fc.js";import"./RelationshipQuery-86d00593.js";import"./FullTextSearch-9c3b6738.js";import"./QuantizationParameters-047a8fb0.js";import"./LayerFloorInfo-c5010652.js";import"./serviceCapabilitiesUtils-d97f21eb.js";import"./queryZScale-a1939753.js";import"./APIKeyMixin-a201f929.js";import"./ArcGISService-7f066aea.js";import"./BlendLayer-8947abd2.js";import"./jsonUtils-c816488a.js";import"./parser-e8657b5e.js";import"./mat4f32-60a2394b.js";import"./mat4-a716043f.js";import"./CustomParametersMixin-4a5d03f4.js";import"./EditBusLayer-fe8c4a23.js";import"./FeatureEffectLayer-4b19d3ac.js";import"./FeatureEffect-ab0d1707.js";import"./FeatureReductionLayer-2b1f24c2.js";import"./clusterUtils-34ff746f.js";import"./MD5-715f37cd.js";import"./FeatureReductionSelection-0d9c5570.js";import"./LabelClass-e2fd4294.js";import"./labelUtils-64d01ef0.js";import"./defaultsJSON-b087dd4d.js";import"./OperationalLayer-61f7229f.js";import"./OrderedLayer-609b38d1.js";import"./PortalLayer-d38eb28e.js";import"./PortalItem-6e04dd29.js";import"./portalItemUtils-0033aed5.js";import"./RefreshableLayer-4bf55224.js";import"./ScaleRangeLayer-66b933a4.js";import"./TemporalLayer-c4d663bb.js";import"./FeatureTemplate-f7d78c16.js";import"./FeatureType-5838f4bd.js";import"./fieldProperties-e6427986.js";import"./labelingInfo-efefa770.js";import"./versionUtils-40da0aad.js";import"./styleUtils-5d13f252.js";import"./TopFeaturesQuery-f3898e23.js";import"./popupUtils-d11912bd.js";import"./interfaces-f1f22245.js";import"./QueryEngineCapabilities-85c4f1d0.js";let n=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:o,timeExtent:a}=await this._connection.invoke("refresh",e);return o&&(this.sourceJSON.extent=o),a&&(this.sourceJSON.timeInfo.timeExtent=[a.start,a.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const o=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return P.fromJSON(o)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const o=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:o.count,extent:S.fromJSON(o.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await C("CSVSourceWorker",{strategy:O("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:o,fields:a,latitudeField:y,longitudeField:f,spatialReference:p,timeInfo:u}=this.loadOptions,d=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:o,fields:a==null?void 0:a.map(g=>g.toJSON()),latitudeField:y,longitudeField:f,spatialReference:p==null?void 0:p.toJSON(),timeInfo:u==null?void 0:u.toJSON()}},{signal:t});this.locationInfo=d.locationInfo,this.sourceJSON=d.layerDefinition,this.delimiter=d.delimiter}};i([r()],n.prototype,"type",void 0),i([r()],n.prototype,"loadOptions",void 0),i([r()],n.prototype,"customParameters",void 0),i([r()],n.prototype,"locationInfo",void 0),i([r()],n.prototype,"sourceJSON",void 0),i([r()],n.prototype,"delimiter",void 0),n=i([m("esri.layers.graphics.sources.CSVSource")],n);function c(t,e){throw new h(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let s=class extends J{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=q.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,o=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(N).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(o),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){var o,a;return e.showLabels!=null?e.showLabels:!!((a=(o=e.layerDefinition)==null?void 0:o.drawingInfo)!=null&&a.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const e=_(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new n({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(o=>{if(o!=null&&o.features)for(const a of o.features)a.layer=a.sourceLayer=this;return o})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(l.from(t)||this.createQuery()))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new h("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return c(this,"csv-layer:save")}async saveAs(t,e){return c(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],s.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],s.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],s.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],s.prototype,"isTable",null),i([F("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],s.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],s.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],s.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],s.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],s.prototype,"operationalLayerType",void 0),i([r()],s.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],s.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:n,readOnly:!0})],s.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],s.prototype,"type",void 0),i([r({json:{read:b,write:{isRequired:!0,ignoreOrigin:!0,writer:I}}})],s.prototype,"url",null),s=i([m("esri.layers.CSVLayer")],s);const Yt=s;export{Yt as default};
