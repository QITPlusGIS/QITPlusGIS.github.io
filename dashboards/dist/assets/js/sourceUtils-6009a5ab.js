import{cM as d,cN as m,cL as h,cO as p,b0 as y,cP as g,al as a,a0 as w}from"./index-2abb185a.js";import{t as I}from"./date-d60e9730.js";class _{constructor(){this.code=null,this.description=null}}class b{constructor(r){this.error=new _,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=r}}function c(n){return new b(n)}class P{constructor(r){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=r}}function A(n){return new P(n)}const l=new Set;function F(n,r,e,f=!1){l.clear();for(const i in e){const t=n.get(i);if(!t)continue;const o=q(t,e[i]);if(l.add(t.name),t&&(f||t.editable)){const u=d(t,o);if(u)return c(m(u,t,o));r[t.name]=o}}for(const i of(n==null?void 0:n.requiredFields)??[])if(!l.has(i.name))return c(`missing required field "${i.name}"`);return null}function q(n,r){let e=r;return h(n)&&typeof r=="string"?e=parseFloat(r):p(n)&&r!=null&&typeof r!="string"?e=String(r):y(n)&&typeof r=="string"&&(e=I(r)),g(e)}let s;function G(n,r){if(!n||!a(r))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(r,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-ad5bac2b.js"),["./geometryEngineJSON-ad5bac2b.js","./geometryEngineBase-696d5fe4.js","./index-2abb185a.js","..\\index-b7f3bae3.css","./geometryEngineJSON-ecdd699d.js","./json-48e3ea08.js"],import.meta.url)),s}async function L(n,r){!a(n)||r!=="esriGeometryPolygon"&&r!=="esriGeometryPolyline"||await j()}export{L as I,A as d,c as f,F as p,G as w};
