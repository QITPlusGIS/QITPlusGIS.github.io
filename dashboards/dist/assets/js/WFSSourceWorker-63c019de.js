import{o as h,W as y,at as g,b$ as d,b as _,s as F,d as w}from"./uuid-854440a9.js";import{r as S,s as E}from"./featureConversionUtils-fdf2c775.js";import{m as q}from"./FeatureStore-9681d4d9.js";import{x,j as T}from"./projectionSupport-8495a885.js";import{W as R}from"./QueryEngine-bbeab430.js";import{E as I,N as b}from"./geojson-c6f4c112.js";import{p as j}from"./sourceUtils-386226ba.js";import{a as C,B as $}from"./wfsUtils-6eca9f6e.js";import{c as k}from"./FieldsIndex-babfd5a5.js";import"./index-2eca610e.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./BoundsStore-dd225cac.js";import"./PooledRBush-4f95607e.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./timeSupport-6a944054.js";import"./arcgisLayerUrl-db50ff50.js";import"./normalizeUtils-c97c170d.js";import"./normalizeUtilsCommon-092672b3.js";import"./json-48e3ea08.js";import"./LRUCache-f623b6a8.js";import"./WhereClause-78863139.js";import"./TimeOnly-c0fc7892.js";import"./fieldType-67bcc5fb.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./quantizationUtils-8fbc92ac.js";import"./utils-4b63b07b.js";import"./heatmapUtils-2658140c.js";import"./vec4f64-3c9d0901.js";import"./utils-c3fd1320.js";import"./basemapUtils-144ebf6f.js";import"./Basemap-b930c2b7.js";import"./loadAll-c963e2dd.js";import"./PortalItem-eaf53090.js";import"./writeUtils-afcbee82.js";import"./layerUtils-53516847.js";import"./mat4f32-60a2394b.js";import"./mat4-8067289c.js";import"./generateRendererUtils-7c465ce6.js";import"./signal-9aac29bc.js";import"./RenderState-1d6218ee.js";import"./date-d60e9730.js";import"./xmlUtils-444cb4c0.js";import"./Field-3600efd2.js";class Te{constructor(){this._queryEngine=null,this._customParameters=null}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:r,getFeatureOutputFormat:u,fields:n,geometryType:s,featureType:o,objectIdField:p,customParameters:i}=e,{spatialReference:a,getFeatureSpatialReference:m}=C(r,o,e.spatialReference);this._featureType=o,this._customParameters=i,this._getFeatureUrl=r,this._getFeatureOutputFormat=u,this._getFeatureSpatialReference=m;try{await x(m,a)}catch{throw new h("unsupported-projection","Projection not supported",{inSpatialReference:m,outSpatialReference:a})}y(t);const l=k.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(f=>f.type==="esriFieldTypeDate")?{timeZoneIANA:g}:null}),c=await this._snapshotFeatures({fieldsIndex:l,geometryType:s,objectIdField:p,spatialReference:a},t.signal);return this._queryEngine=new R({fieldsIndex:l,geometryType:s,hasM:!1,hasZ:!1,objectIdField:p,spatialReference:a,timeInfo:null,featureStore:new q({geometryType:s,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(c),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new h("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var t;return this._customParameters=e,(t=this._snapshotTask)==null||t.abort(),this._snapshotTask=d(r=>this._snapshotFeatures(this._queryEngine,r)),this._snapshotTask.promise.then(r=>{this._queryEngine.featureStore.clear(),r&&this._queryEngine.featureStore.addMany(r)},r=>{this._queryEngine.featureStore.clear(),_(r)||F.getLogger("esri.layers.WFSLayer").error(new h("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:r}))}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures({objectIdField:e,geometryType:t,spatialReference:r,fieldsIndex:u},n){const s=await $(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:n});I(s,this._getFeatureSpatialReference.wkid),y(n);const o=b(s,{geometryType:t,hasZ:!1,objectIdField:e});if(!w(r,this._getFeatureSpatialReference))for(const i of o)i.geometry!=null&&(i.geometry=S(T(E(i.geometry,t,!1,!1),this._getFeatureSpatialReference,r)));let p=1;for(const i of o){const a={};j(u,a,i.attributes,!0),i.attributes=a,a[e]==null&&(i.objectId=a[e]=p++)}return o}}export{Te as default};
