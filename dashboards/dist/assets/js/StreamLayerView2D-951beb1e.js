import{a as i,y as n,c as y,f as d,o as u,dg as h,e as _}from"./uuid-8543c34e.js";import{d as f}from"./FeatureSet-5aedb17a.js";import S from"./FeatureLayerView2D-a4b4aaa0.js";import{e as g}from"./util-daa007fc.js";import{d as v}from"./FeatureEffect-8c4188ef.js";import"./index-71f6c0ac.js";import"./Field-d39fc769.js";import"./fieldType-2c1216fb.js";import"./Container-893ba426.js";import"./mat3f32-6c416b1c.js";import"./parser-01d0d370.js";import"./mat4f32-60a2394b.js";import"./mat4-f427906c.js";import"./definitions-aec0bc6e.js";import"./enums-bdecffa2.js";import"./Texture-975d76ef.js";import"./capabilities-97ba1202.js";import"./layerUtils-60bab848.js";import"./Query-6436d464.js";import"./arcgisLayerUrl-ec2f2135.js";import"./FullTextSearch-aa688208.js";import"./QuantizationParameters-5bcf1f9a.js";import"./LayerView-456ec160.js";import"./scaleUtils-8d8ec80b.js";import"./map-286f7c32.js";import"./Basemap-40557d3d.js";import"./loadAll-97b0a04e.js";import"./PortalItem-40a43a90.js";import"./writeUtils-e7cfa8a6.js";import"./compilerUtils-b6fccf25.js";import"./CollectionFlattener-e4b1221f.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-a6a84bcd.js";import"./TablesMixin-d24d5b39.js";import"./Cyclical-e795bbc8.js";import"./workers-d869425a.js";import"./TileInfo-fde75a2c.js";import"./jsxFactory-7ff493e4.js";import"./UpdatingHandles-33b1c156.js";import"./signal-727603b5.js";import"./GraphicsCollection-86205b66.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-45802eb2.js";import"./vec2-32a2877d.js";import"./TileStore-86a22d37.js";import"./quickselect-149a6b43.js";import"./commonjsHelpers-2f3e7994.js";import"./TileInfoView-8324374b.js";import"./vec2f64-95bf678d.js";import"./normalizeUtils-dd0d9796.js";import"./normalizeUtilsCommon-1d284c7d.js";import"./mat3-1f4b34e6.js";import"./vec2f32-eaf29605.js";import"./GoTo-1619a2f4.js";import"./AttributeStoreView-e47576a0.js";import"./TiledDisplayObject-5427d203.js";import"./diffUtils-2f40bb41.js";import"./labelingInfo-cc2f73a7.js";import"./LabelClass-766d0bd7.js";import"./labelUtils-308d1e86.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-f5725ae9.js";import"./color-13bc1b28.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-4ac101c7.js";import"./FramebufferObject-1aab62a8.js";import"./ProgramTemplate-1d255117.js";import"./GeometryUtils-43a9ebf1.js";import"./heatmapUtils-7f7225e7.js";import"./vec4f64-3c9d0901.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-b84353bc.js";import"./featureConversionUtils-f2db813b.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-c8641365.js";import"./ExpandedCIM-37ed220f.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-22fd4a50.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-82ba167c.js";import"./floatRGBA-c189677f.js";import"./clusterUtils-51d649eb.js";import"./MD5-715f37cd.js";import"./SizeVariable-569fefc3.js";import"./colorRamps-6df6d6f7.js";import"./LegendOptions-5787bf37.js";import"./lengthUtils-7e41a327.js";import"./BitmapTileContainer-2471c529.js";import"./Bitmap-1ed23743.js";import"./TileContainer-309cc158.js";import"./CircularArray-ef508845.js";import"./BufferPool-4922d97a.js";import"./FeatureContainer-96b9e7e1.js";import"./commonProperties-33a2de5d.js";import"./ElevationInfo-4de725df.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-8f4971ae.js";import"./RefreshableLayerView-fd7aa8e0.js";import"./jsonUtils-7a48f99d.js";const O=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return this._isUserPaused?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:v})],e.prototype,"filter",void 0),e=i([y("esri.layers.mixins.StreamLayerView")],e),e};function c(t,e){if(t==null&&e==null)return null;const r={};return e!=null&&(r.geometry=e.toJSON()),t!=null&&(r.where=t),r}let s=class extends O(S){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null,this._enabledEventTypes=new Set}initialize(){this.addHandles([d(()=>this.layer.customParameters,t=>this._proxy.updateCustomParameters(t)),this.layer.on("send-message-to-socket",t=>this._proxy.sendMessageToSocket(t)),this.layer.on("send-message-to-client",t=>this._proxy.sendMessageToClient(t)),d(()=>this.layer.purgeOptions,()=>this._update()),d(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor")}get connectionError(){return this.pipelineErrorString?new u("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(m=>this.on(m,e)));const r=["data-received","message-received"].includes(t);r&&(this._enabledEventTypes.add(t),this._proxy.enableEvent(t,!0));const p=super.on(t,e),o=this;return _(()=>{p.remove(),r&&(o._proxy.closed||o.hasEventListener(t)||o._proxy.enableEvent(t,!1))})}queryLatestObservations(t,e){var r,p,o;if(!((r=this.layer.timeInfo)!=null&&r.endField||(p=this.layer.timeInfo)!=null&&p.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new u("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(t),e).then(m=>{const a=f.fromJSON(m);return a.features.forEach(l=>{l.layer=this.layer,l.sourceLayer=this.layer}),a})}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){var t;(t=this._proxy)==null||t.pauseStream()}_doResume(){var t;(t=this._proxy)==null||t.resumeStream()}_createClientOptions(){return{...super._createClientOptions(),setProperty:t=>{this.set(t.propertyName,t.value)}}}_createTileRendererHash(t){const e=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(c(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(t)+e}async _createServiceOptions(){var a;const t=this.layer,{objectIdField:e}=t,r=t.fields.map(l=>l.toJSON()),p=g(t.geometryType),o=((a=t.timeInfo)==null?void 0:a.toJSON())||null,m=t.spatialReference?t.spatialReference.toJSON():null;return{type:"stream",isPaused:this._isUserPaused,fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:p,objectIdField:e,timeInfo:o,source:this.layer.parsedUrl,serviceFilter:c(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enabledEventTypes:Array.from(this._enabledEventTypes.values()),spatialReference:m,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:t.customParameters}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([y("esri.views.2d.layers.StreamLayerView2D")],s);const Se=s;export{Se as default};
