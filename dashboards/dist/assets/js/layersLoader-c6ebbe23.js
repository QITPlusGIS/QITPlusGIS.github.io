import{o as h,Y as F}from"./uuid-896b9aab.js";import{p as D}from"./arcgisLayerUrl-babbe1bf.js";import{r as k}from"./fetchService-32179de4.js";import{a as x,n as T,s as G,i as P,l as $,t as g,r as j,e as L}from"./portalLayers-ff1fa353.js";import{populateGroupLayer as E}from"./layersCreator-46569bae.js";import{a as C}from"./associatedFeatureServiceUtils-739eaf4f.js";import{e as O,l as R}from"./jsonContext-e6effc50.js";import{s as J}from"./portalItemUtils-50147700.js";import{t as N}from"./styleUtils-56d63244.js";import{t as Y}from"./requestPresets-cb9586bc.js";import"./index-36e9aec6.js";import"./layerUtils-71133796.js";import"./PortalItem-6f01e175.js";async function ce(t,r){const a=t.instance.portalItem;if(a!=null&&a.id)return await a.load(r),q(t),z(t,r)}function q(t){const r=t.instance.portalItem;if(!(r!=null&&r.type)||!t.supportedTypes.includes(r.type))throw new h("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:r==null?void 0:r.type,expectedType:t.supportedTypes.join(", ")})}async function z(t,r){const a=t.instance,e=a.portalItem;if(!e)return;const{url:o,title:n}=e,l=O(e);if(a.type==="group")return A(a,l,t);o&&a.read({url:o},l);const s=new L,i=await S(t,s,r);return i&&a.read(i,l),a.resourceReferences={portalItem:e,paths:l.readResourcePaths??[]},a.type!=="subtype-group"&&a.read({title:n},l),N(a,l)}async function A(t,r,a){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:o,type:n}=e;if(n==="Group Layer"){if(!J(e,"Map"))throw new h("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return B(t)}return t.read({title:o},r),H(t,a)}async function B(t){const r=t.portalItem,a=await r.fetchData("json");if(!a)return;const e=R(r);t.read(a,e),await E(t,a,{context:e}),t.resourceReferences={portalItem:r,paths:e.readResourcePaths??[]}}async function H(t,r){let a;const{portalItem:e}=t;if(!e)return;const o=e.type,n=r.layerModuleTypeMap;switch(o){case"Feature Service":case"Feature Collection":a=n.FeatureLayer;break;case"Stream Service":a=n.StreamLayer;break;case"Scene Service":a=n.SceneLayer;break;default:throw new h("portal:unsupported-item-type-as-group",`The item type '${o}' is not supported as a 'IGroupLayer'`)}const l=new L;let[s,i]=await Promise.all([a(),S(r,l)]),p=()=>s;if(o==="Feature Service"){i=e.url?await x(i,e.url,l):{};const y=T(i),u=G(i),f=[];if(y.length||u!=null&&u.length){y.length&&f.push("SubtypeGroupLayer"),u!=null&&u.length&&f.push("OrientedImageryLayer");const w=[];for(const c of f){const d=n[c];w.push(d())}const M=await Promise.all(w),b=new Map;f.forEach((c,d)=>{b.set(c,M[d])}),p=c=>c.layerType?b.get(c.layerType)??s:s}const v=await X(e.url);return await m(t,p,i,v)}return o==="Scene Service"&&e.url&&(i=await P(e,i,l)),$(i)>0?await m(t,p,i):await K(t,p)}async function K(t,r){var o,n;const{portalItem:a}=t;if(!(a!=null&&a.url))return;const e=await Y(a.url);e&&m(t,r,{layers:(o=e.layers)==null?void 0:o.map(g),tables:(n=e.tables)==null?void 0:n.map(g)})}async function m(t,r,a,e){var l;let o=a.layers||[];const n=a.tables||[];if(((l=t.portalItem)==null?void 0:l.type)==="Feature Collection"?(o.forEach((s,i)=>{var p;s.id=i,((p=s==null?void 0:s.layerDefinition)==null?void 0:p.type)==="Table"&&n.push(s)}),o=o.filter(s=>{var i;return((i=s==null?void 0:s.layerDefinition)==null?void 0:i.type)!=="Table"})):(o.reverse(),n.reverse()),o.forEach(s=>{const i=e==null?void 0:e(s);if(i||!e){const p=I(t,r(s),a,s,i);t.add(p)}}),n.length){const s=await C.FeatureLayer();n.forEach(i=>{const p=e==null?void 0:e(i);if(p||!e){const y=I(t,s,a,i,p);t.tables.add(y)}})}}function I(t,r,a,e,o){const n=t.portalItem,l={portalItem:n.clone(),layerId:e.id};e.url!=null&&(l.url=e.url);const s=new r(l);if("sourceJSON"in s&&(s.sourceJSON=o),s.type!=="subtype-group"&&(s.sublayerTitleMode="service-name"),n.type==="Feature Collection"){const i={origin:"portal-item",portal:n.portal||F.getDefault()};s.read(e,i);const p=a.showLegend;p!=null&&s.read({showLegend:p},i)}return s}async function S(t,r,a){if(t.supportsData===!1)return;const e=t.instance,o=e.portalItem;if(!o)return;let n=null;try{n=await o.fetchData("json",a)}catch{}if(V(e)){let l=null;const s=await Q(o,n,r);if((n!=null&&n.layers||n!=null&&n.tables)&&s>0){if(e.layerId==null){const i=T(n);e.layerId=e.type==="subtype-group"?i==null?void 0:i[0]:j(n)}l=U(n,e),l&&n.showLegend!=null&&(l.showLegend=n.showLegend)}return s>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),l}return n}async function Q(t,r,a){var n,l,s,i;if(r!=null&&r.layers&&(r!=null&&r.tables))return $(r);const e=D(t.url);if(!e)return 1;const o=await a.fetchServiceMetadata(e.url.path).catch(()=>null);return(((n=r==null?void 0:r.layers)==null?void 0:n.length)??((l=o==null?void 0:o.layers)==null?void 0:l.length)??0)+(((s=r==null?void 0:r.tables)==null?void 0:s.length)??((i=o==null?void 0:o.tables)==null?void 0:i.length)??0)}function U(t,r){var o,n;const{layerId:a}=r,e=((o=t.layers)==null?void 0:o.find(l=>l.id===a))||((n=t.tables)==null?void 0:n.find(l=>l.id===a));return e&&W(e,r)?e:null}function V(t){return t.type!=="stream"&&"layerId"in t}function W(t,r){return!(r.type==="feature"&&"layerType"in t&&t.layerType==="SubtypeGroupLayer"||r.type==="subtype-group"&&!("layerType"in t))}async function X(t){const{layersJSON:r}=await k(t);if(!r)return null;const a=[...r.layers,...r.tables];return e=>a.find(o=>o.id===e.id)}export{ce as load};
