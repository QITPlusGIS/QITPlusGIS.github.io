import{a as e,y as o,c as h,b as g,s as l,f as d}from"./uuid-854440a9.js";import{i as u}from"./GraphicsCollection-1f93c1d2.js";import{a as c}from"./BitmapContainer-902c6655.js";import{m as y,u as f}from"./LayerView-80524fa4.js";import{r as x}from"./GraphicsView2D-541ac563.js";import{a as w}from"./HighlightGraphicContainer-c68ba8a8.js";import{v as _}from"./ExportStrategy-ba03e6d6.js";import{j as v}from"./commonProperties-c4c17d77.js";import{m as H}from"./ExportImageParameters-b3b84bf1.js";import{a as I}from"./RefreshableLayerView-81a56f3c.js";import{G as V,r as P}from"./drapedUtils-34455115.js";import"./index-2eca610e.js";import"./WGLContainer-c3fd9b8d.js";import"./definitions-8d472612.js";import"./FramebufferObject-aafd1353.js";import"./Texture-6ea577e5.js";import"./capabilities-b7174812.js";import"./enums-bdecffa2.js";import"./ProgramTemplate-34b1be08.js";import"./commonjsHelpers-2f3e7994.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-e7463257.js";import"./enums-f1a6a48a.js";import"./GeometryUtils-78cf27b3.js";import"./heatmapUtils-2658140c.js";import"./vec4f64-3c9d0901.js";import"./mat3f32-6c416b1c.js";import"./StyleDefinition-29c49b98.js";import"./vec2f32-eaf29605.js";import"./config-1337d16e.js";import"./Container-79c4018f.js";import"./parser-575e2c11.js";import"./mat4f32-60a2394b.js";import"./mat4-8067289c.js";import"./earcut-b84353bc.js";import"./vec2-525139f9.js";import"./vec2f64-95bf678d.js";import"./featureConversionUtils-fdf2c775.js";import"./OptimizedFeature-ded94d90.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./scaleUtils-54b03d24.js";import"./map-3b85b863.js";import"./Basemap-b930c2b7.js";import"./loadAll-c963e2dd.js";import"./PortalItem-eaf53090.js";import"./writeUtils-afcbee82.js";import"./layerUtils-53516847.js";import"./compilerUtils-29e4db8f.js";import"./CollectionFlattener-0ef23bca.js";import"./infoFor3D-24efd44a.js";import"./basemapUtils-144ebf6f.js";import"./TablesMixin-cecb199e.js";import"./arcgisLayerUrl-db50ff50.js";import"./Cyclical-69deeef6.js";import"./workers-bc069650.js";import"./TileInfo-9470b42d.js";import"./jsxFactory-93a8ddd6.js";import"./UpdatingHandles-0afdfd5b.js";import"./signal-9aac29bc.js";import"./ViewingMode-fb6259a5.js";import"./unitBezier-881ac1eb.js";import"./mat2df32-196efb0a.js";import"./TileStore-5e70d226.js";import"./quickselect-149a6b43.js";import"./QuantizationParameters-0cb320a2.js";import"./TileInfoView-c4c10e27.js";import"./normalizeUtils-c97c170d.js";import"./normalizeUtilsCommon-092672b3.js";import"./mat3-5955b3db.js";import"./GoTo-548e14ed.js";import"./ExpandedCIM-ed43baeb.js";import"./BidiEngine-9a40f2f4.js";import"./visualVariablesUtils-927e7922.js";import"./GeometryUtils-984e8446.js";import"./utils-a7ae7610.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-8fbc92ac.js";import"./floatRGBA-f2d0b76d.js";import"./normalizeUtilsSync-1a7964bc.js";import"./projectionSupport-8495a885.js";import"./json-48e3ea08.js";import"./LabelClass-360f8a0a.js";import"./labelUtils-38642a07.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-1956249c.js";import"./AttributeStoreView-db69522e.js";import"./TiledDisplayObject-8907be27.js";import"./diffUtils-2fda0782.js";import"./labelingInfo-f046f80c.js";import"./clusterUtils-3da19a70.js";import"./MD5-715f37cd.js";import"./SizeVariable-bf59d78c.js";import"./colorRamps-2b21b939.js";import"./LegendOptions-82a1d9d3.js";import"./lengthUtils-b6ebb268.js";import"./util-6c29cc30.js";import"./Matcher-4d5d9536.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-dff48d62.js";import"./LRUCache-f623b6a8.js";import"./ComputedAttributeStorage-684df5c3.js";import"./FieldsIndex-babfd5a5.js";import"./TimeOnly-c0fc7892.js";import"./BaseGraphicContainer-7d1d86a0.js";import"./FeatureContainer-2a82270f.js";import"./TileContainer-3c52930c.js";import"./vec3f32-2da9db36.js";import"./Bitmap-42146cc6.js";import"./ElevationInfo-cefb6d5f.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-559d4691.js";import"./popupUtils-ce21ae10.js";const U=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var r;return((r=this.view)==null?void 0:r.floors)??null}get exportImageVersion(){var r;return(r=this.exportImageParameters)==null||r.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){var r;return!!super.canResume()&&!((r=this.timeExtent)!=null&&r.isEmpty)}};return e([o()],i.prototype,"exportImageParameters",void 0),e([o({readOnly:!0})],i.prototype,"floors",null),e([o({readOnly:!0})],i.prototype,"exportImageVersion",null),e([o()],i.prototype,"layer",void 0),e([o()],i.prototype,"suspended",void 0),e([o(v)],i.prototype,"timeExtent",void 0),i=e([h("esri.views.layers.MapImageLayerView")],i),i};let m=class extends U(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new u,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(r=>{g(r)||l.getLogger(this).error(r)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:r}=this.layer,p=r>=10.3,n=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new w(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new V({createFetchPopupFeaturesQueryGeometry:(a,s)=>P(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:p,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(d(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,r,p){return this.layer.fetchImage(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}fetchImageBitmap(t,i,r,p){return this.layer.fetchImageBitmap(t,i,r,{timeExtent:this.timeExtent,floors:this.floors,...p})}highlight(t){return this._popupHighlightHelper.highlight(t)}};e([o()],m.prototype,"strategy",void 0),e([o()],m.prototype,"updating",void 0),m=e([h("esri.views.2d.layers.MapImageLayerView2D")],m);const Si=m;export{Si as default};
